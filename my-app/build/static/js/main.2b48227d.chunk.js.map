{"version":3,"sources":["state.ts","components/LoginComponent.tsx","components/BoardTile.tsx","components/LetterTileComponent.tsx","components/HandComponent.tsx","components/PouchComponent.tsx","components/GameBoardComponent.tsx","components/Lobby.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["usePlayers","useState","players","setPlayers","LoginComponent","isLoading","setIsLoading","LoginPanel","TextField","id","password","Button","onClick","usernameInput","document","getElementById","axios","post","BE_URL","username","value","then","response","status","name","window","location","href","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","err","finally","styled","div","input","attrs","props","type","button","BoardTile","tileType","getTileColorFromProps","BoardTileDiv","style","fontSize","background","getTileTextFromProps","idCounter","LetterTileComponent","leftPos","className","letter","points","HandComponent","Div","map","idx","i","PouchComponent","isMouseOver","setMouseOver","onMouseLeave","onMouseOver","width","height","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","boardTiles","GameBoardComponent","BoardComponent","x","y","tile","ButtomContainer","Lobby","player","StartButton","LeaveButton","ul","GameViewHeader","HeaderContainer","PlayerInfo","PlayerContainer","PointButton","FlexDivRow","FlexDivCol","setPoints","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b48227d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport Player from \"./types/player\";\r\n\r\nexport const usePlayers = () => {\r\n\r\n  const [ players, setPlayers ] = useState(<Player[]>[]);\r\n  \r\n return {\r\n   players : players,\r\n   setPlayers : setPlayers\r\n };\r\n}\r\n\r\nexport const BE_URL = \"http://localhost:5000\";","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL, usePlayers } from '../state';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const LoginComponent = () => {\r\n\r\n    const { players, setPlayers } = usePlayers();\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    const handleLogin = () => {\r\n\r\n        if( isLoading )\r\n            return;\r\n\r\n        setIsLoading(true);\r\n        const usernameInput = document.getElementById(\"txtUsername\") as HTMLInputElement;\r\n        const passwordInput = document.getElementById(\"txtPassword\") as HTMLInputElement;\r\n        \r\n        axios.post(BE_URL+\"/login\",{\r\n            username: usernameInput.value,\r\n            password: usernameInput.value\r\n        }\r\n        ).then((response) => {\r\n\r\n            if( response.status == 200 ) {\r\n                setPlayers([...players, {\r\n                    name: usernameInput.value\r\n                }]);\r\n                window.location.href = '/lobby';\r\n            }\r\n            else {\r\n                toast(\"Login failed!\", {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    });;\r\n            }\r\n        }).catch( (err) => {\r\n            toast(\"Login failed!\", {\r\n                position: \"bottom-center\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                });;\r\n        })\r\n        .finally( () => {\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <LoginPanel>\r\n            <TextField id=\"txtUsername\" />\r\n            <TextField password id=\"txtPassword\" />\r\n            <Button onClick={ handleLogin }>Login</Button>\r\n            <ToastContainer></ToastContainer>\r\n        </LoginPanel>\r\n    );\r\n}\r\n\r\nconst LoginPanel = styled.div`\r\nwidth: 183px;\r\n    border-radius: 6px;\r\n    padding: 20px;\r\n    background: #1e2529;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TextField = styled.input.attrs(props => ({\r\n    type: props.password ? \"password\" : \"text\"\r\n}))`\r\nheight: 22px;\r\npadding: 5px;\r\nborder: 2px solid 2196f3;\r\nmargin-top: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    height: 30px;\r\n    background: #2196f3;\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin-top: 5px;\r\n    width: 181px;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    &:active {\r\n        border: 1px;\r\n        border-style: inset;\r\n        user-select: none;\r\n    }\r\n`;","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const N0R = 0, \r\n    X2W = 1, \r\n    X3W = 2, \r\n    X2L = 3, \r\n    X3L = 4,\r\n    CNT = 5;\r\n\r\nexport const BoardTile = (props) => {\r\n\r\n    const getTileStyle = (tileType) => {\r\n\r\n        return {\r\n            fontSize: \"11px\",\r\n            background: getTileColorFromProps(tileType)\r\n        }\r\n    }\r\n    \r\n    const getTileColorFromProps = (tileType) => {\r\n\r\n        if( tileType == X2W )\r\n            return \"pink\";\r\n        else if( tileType == X3W )\r\n            return \"red\";\r\n        else if( tileType == X2L )\r\n            return \"cyan\";\r\n        else if( tileType == X3L )\r\n            return \"blue\";\r\n        else if( tileType == CNT )\r\n            return \"red\";\r\n        \r\n        return \"\";\r\n    }\r\n\r\n    const getTileTextFromProps = (tileType) => {\r\n\r\n        if( tileType == X2W )\r\n            return \"2xWord\";\r\n        else if( tileType == X3W )\r\n            return \"3xWord\";\r\n        else if( tileType == X2L )\r\n            return \"2xLetter\";\r\n        else if( tileType == X3L )\r\n            return \"3xLetter\";\r\n        \r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <BoardTileDiv style={getTileStyle(props.tileType)}>{getTileTextFromProps(props.tileType)}</BoardTileDiv>\r\n    )\r\n}\r\n\r\nconst BoardTileDiv = styled.div`\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid rgba(0, 0, 0, 0.8);\r\n    text-align: center;\r\n    padding: 4px;\r\n    width: 38px;\r\n    height: 38px;\r\n`;","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/types';\r\n\r\nexport type LetterProps = {\r\n    letter : LetterTile;\r\n    leftPos: string;\r\n}\r\n\r\nlet idCounter = 0;\r\n\r\nexport const LetterTileComponent = (props : LetterProps) => {\r\n\r\n    const id = idCounter++;\r\n\r\n    const style = {\r\n        left: props.leftPos+\"px\"\r\n    }\r\n\r\n    return (\r\n        <div draggable=\"true\" className=\"letterTile\" id={\"letterTile_\"+idCounter++}>\r\n            {props.letter.letter}\r\n            <div className=\"letterPoint\">\r\n                {props.letter.points}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/types';\r\nimport { LetterTileComponent } from './LetterTileComponent';\r\n\r\nlet idCounter = 0;\r\n\r\nconst getHandLetters = () : LetterTile[] => {\r\n    return [\r\n        { letter: \"A\", points: 2},\r\n        { letter: \"B\", points: 10},\r\n        { letter: \"C\", points: 12},\r\n    ]\r\n}\r\n\r\nexport const HandComponent = () => {\r\n\r\n    const calculateLeftPos = (i) => {\r\n        const leftPosNumber = i * 40;\r\n        return \"\"+leftPosNumber;\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            {getHandLetters().map( (letter, idx) => (\r\n               <LetterTileComponent letter={letter} leftPos={calculateLeftPos(idx)}></LetterTileComponent> \r\n            ))}\r\n        </Div>\r\n    )\r\n}\r\n\r\nconst Div = styled.div`\r\nmargin-top: 10px;\r\nheight: 50px;\r\nwidth: 500px;\r\nbackground-color: #989a8e;\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\n`;","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const PouchComponent = (props) => {\r\n\r\n\tconst style = {\r\n\t\twidth: \"80px\",\r\n\t\theight: \"80px\",\r\n\t};\r\n\r\n  const [isMouseOver, setMouseOver] = useState(false);\r\n\r\n\treturn (\r\n  \r\n\t  <svg onClick={ props.onClick } onMouseLeave = { () => { setMouseOver(false);} } onMouseOver= { () => { setMouseOver(true); }} style={style} version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n   width=\"924.000000pt\" height=\"1280.000000pt\" viewBox=\"0 0 924.000000 1280.000000\"\r\n   preserveAspectRatio=\"xMidYMid meet\">\r\n  <metadata>\r\n  Created by potrace 1.15, written by Peter Selinger 2001-2017\r\n  </metadata>\r\n  <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\r\n  fill={isMouseOver ? \"cyan\" : \"#eef1e3\"} stroke=\"none\">\r\n  <path d=\"M5080 12790 c-91 -4 -190 -13 -220 -19 -30 -7 -138 -21 -240 -31\r\n  -542 -59 -828 -105 -1100 -179 -41 -12 -131 -34 -200 -51 -962 -229 -1486\r\n  -540 -1550 -920 -28 -165 19 -309 167 -518 162 -228 374 -462 759 -837 385\r\n  -376 486 -492 557 -643 60 -127 39 -255 -59 -370 -20 -23 -61 -63 -91 -87\r\n  -166 -136 -794 -871 -1171 -1373 -1665 -2212 -2268 -4056 -1751 -5355 182\r\n  -457 523 -869 974 -1176 555 -379 1250 -642 2165 -820 692 -134 1225 -205\r\n  1655 -220 771 -26 1424 74 2030 312 163 64 467 216 605 302 543 342 956 795\r\n  1236 1355 423 847 506 1853 239 2895 -114 445 -334 972 -585 1400 -497 846\r\n  -1260 1631 -2159 2220 -244 159 -582 358 -753 441 -67 32 -67 33 -43 157 50\r\n  262 128 478 417 1157 295 692 404 998 460 1300 30 157 32 413 4 515 -80 298\r\n  -289 460 -681 530 -108 20 -428 27 -665 15z\"/>\r\n  </g>\r\n  </svg>\r\n\t)\r\n}  ","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/types';\r\nimport { BoardTile, X3W, N0R, X2W, X3L, X2L, CNT } from './BoardTile';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\n\r\n\r\nconst boardTiles = [\r\n        [X3W,N0R,N0R,X2W,N0R,N0R,N0R,X3W,N0R,N0R,X2W,N0R,N0R,N0R,X3W],\r\n\t\t[N0R,X2W,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,X2W,N0R],\r\n\t\t[N0R,N0R,X2W,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,X2W,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,X2W,N0R,N0R,N0R,N0R,N0R,N0R,N0R,X2W,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,X2W,N0R,N0R,N0R,N0R,N0R,X2W,N0R,N0R,N0R,N0R],\t\r\n\t\t[N0R,N0R,N0R,N0R,N0R,X3L,N0R,N0R,N0R,X3L,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,X2L,N0R,X2L,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,CNT,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\t\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R],\r\n\t\t[N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R,N0R]\r\n]\r\n\r\nconst letters = [\r\n    'A','A','A','A','A','A','A','A','A',\r\n\t\t'B','B',\r\n\t\t'C',\r\n\t\t'D','D','D','D',\r\n\t\t'E','E','E','E','E','E','E','E','E','E','E','E',\r\n\t\t'F','F',\r\n\t\t'G',\r\n\t\t'H','H','H',\r\n\t\t'I','I','I','I','I','I','I','I','I',\r\n\t\t'J',\r\n\t\t'K','K','K',\r\n\t\t'L','L','L',\r\n\t\t'M','M',\r\n\t\t'N','N','N','N','N','N',\r\n\t\t'O','O','O','O','O','O','O','O',\r\n\t\t'P','P',\r\n\t\t'R','R','R','R',\r\n\t\t'S','S','S','S','S',\r\n\t\t'T','T','T','T','T','T',\r\n\t\t'U','U','U','U',\r\n\t\t'V','V',\r\n\t\t'X',\r\n\t\t'Y','Y',\r\n\t\t'Z',\r\n\t\t'-','-',\r\n\t\t'Ä','Ä','Ä',\r\n\t\t'Ö','Ö'\r\n];\r\n\r\nconst points = [];\r\npoints[\"A\"] = 1;\r\n\tpoints[\"B\"] = 8;\r\n\tpoints[\"C\"] = 10;\r\n\tpoints[\"D\"] = 7;\r\n\tpoints[\"E\"] = 1;\r\n\tpoints[\"F\"] = 8;\r\n\tpoints[\"G\"] = 8;\r\n\tpoints[\"H\"] = 4;\r\n\tpoints[\"I\"] = 1;\r\n\tpoints[\"J\"] = 4;\r\n\tpoints[\"K\"] = 2;\r\n\tpoints[\"L\"] = 2;\r\n\tpoints[\"M\"] = 3;\r\n\tpoints[\"N\"] = 1;\r\n\tpoints[\"O\"] = 2;\r\n\tpoints[\"P\"] = 4;\r\n\tpoints[\"Q\"] = 10;\r\n\tpoints[\"R\"] = 4;\r\n\tpoints[\"S\"] = 1;\r\n\tpoints[\"T\"] = 1;\r\n\tpoints[\"U\"] = 3;\r\n\tpoints[\"V\"] = 4;\r\n\tpoints[\"X\"] = 8;\r\n\tpoints[\"Y\"] = 4;\r\n\tpoints[\"Z\"] = 10;\r\n\tpoints[\"Ä\"] = 2;\r\n\tpoints[\"Ö\"] = 3;\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n\tconst handleNewLetterTile = () => {\r\n\r\n\t};\r\n\r\n    return (\r\n\t\t<div>\r\n        \t<BoardComponent>\r\n            \t{boardTiles.map( (x,y) => (\r\n                    x.map( tile => (<BoardTile tileType={tile}></BoardTile>))\r\n                ))}\r\n        \t</BoardComponent>\r\n\t\t\t<ButtomContainer>\r\n\t\t\t\t<HandComponent/>\r\n\t\t\t\t<PouchComponent/>\r\n\t\t\t</ButtomContainer>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\n/*\r\nfunction createLetterTile(player1) {\r\n\t\t\r\n    var handEl = player1 ? document.getElementById(\"hand1\") : document.getElementById(\"hand2\");\r\n    var handTileCount = handEl.childElementCount-1;\r\n    \r\n    if( handTileCount >= 7 )\r\n        return;\r\n    \r\n    var letter = getNextLetter();\r\n    if( !letter )\r\n        return;\r\n    \r\n    var el = document.createElement(\"div\");\r\n    el.id = \"letterTile_\"+tileIdCounter++;\r\n    el.classList.add(\"letterTile\");\r\n    el.draggable = \"true\";\r\n    \r\n    if( handTileCount > 0 )\r\n        el.style.left = ( handTileCount * 50 )+\"px\";\r\n    \r\n    handEl.appendChild(el);\r\n    \r\n    el.innerHTML = letter;\r\n    \r\n    var pp = points[letter];\r\n    if( !pp )\r\n        pp = ' ';\r\n    \r\n    var pointEl = document.createElement(\"div\");\r\n    pointEl.innerHTML = pp;\r\n    pointEl.classList.add(\"letterPoint\");\r\n    el.appendChild(pointEl);\r\n    \r\n    el.ondragstart = function(e) {\r\n        \r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    \r\n    el.onclick = function() {\r\n        \r\n        if( deleteKeyDown ) {\r\n            \r\n            document.getElementsByTagName(\"body\")[0].removeChild(el);\r\n            addLetterToPool(el.innerHTML);\r\n        }\r\n    }\r\n*/\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst ButtomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #2196F3;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\npadding: 10px;\r\n`;","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePlayers } from '../state';\r\n\r\nexport const Lobby = () => {\r\n\r\n    const { players, setPlayers } = usePlayers();\r\n\r\n    const updateF = () => {\r\n\r\n        setPlayers( [ ...players,{name:\"kakka\"}]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n              {players.map( (player) => (\r\n                <li>{player.name}</li>\r\n              ))}\r\n            </ul>\r\n            <StartButton onClick={ updateF }>Start</StartButton>\r\n            <LeaveButton></LeaveButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StartButton = styled.button`\r\n`;\r\n\r\nconst LeaveButton = styled.div``;\r\n\r\nconst PlayerList = styled.ul``;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { LoginComponent } from './components/LoginComponent';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { GameBoardComponent } from './components/GameBoardComponent';\nimport styled from 'styled-components';\nimport Player from './types/player';\nimport { Lobby } from './components/Lobby';\n/*\nTODO\n\nGAME STATE\n*Restart\n*End turn\n -Player turn indicator\n -Disable components\n*Update points\n\nTILES\n*Draw a tile\n*Put back a tile\n*Put a tile on board\n\n\n*/\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/lobby\">\n            <Lobby></Lobby>\n          </Route>\n          <Route path=\"/main\">\n            <GameViewHeader></GameViewHeader>\n            <GameBoardComponent></GameBoardComponent>\n          </Route>\n          <Route path=\"/\">\n            <LoginComponent></LoginComponent>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nconst GameViewHeader = () => {\n\n  const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: row;`;\n\n  return (\n    <HeaderContainer>\n      <PlayerInfo name=\"Olli\"></PlayerInfo>\n      <PlayerInfo name=\"Matti\"></PlayerInfo>\n    </HeaderContainer>\n  )\n}\nconst PlayerInfo = (props) => {\n\n  const PlayerContainer = styled.div`\n  border: 1px solid black;\n    padding: 10px;\n    min-width: 57px;\n    padding-left: 15px;\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n  & > div {\n    display: inline-block;\n  }`;\n\n  const PointButton = styled.button`\n    height: 100%;\n  `;\n\n  const FlexDivRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  `;\n\n  const FlexDivCol = styled.div`\n  display: flex;\n  flex-direction: column;\n  `;\n\n  const [points, setPoints] = useState(0);\n\n  return (\n    <FlexDivRow>\n      <PlayerContainer>\n        <div>{props.name}</div>\n        <div>{points+\"pts\"}</div>\n      </PlayerContainer>\n      <FlexDivCol>\n        <PointButton onClick={() => {setPoints(points+1);} }>+</PointButton>\n        <PointButton onClick={() => {setPoints(points-1);} }>-</PointButton>\n      </FlexDivCol>\n    </FlexDivRow>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}