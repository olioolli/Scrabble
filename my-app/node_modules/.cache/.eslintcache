[{"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\index.tsx":"1","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\App.tsx":"3","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LoginComponent.tsx":"4","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\GameBoardComponent.tsx":"5","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\state.ts":"6","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\Lobby.tsx":"7","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PouchComponent.tsx":"8","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\HandComponent.tsx":"9","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LetterTileComponent.tsx":"10","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\BoardTileComponent.tsx":"11","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\MainView.tsx":"12","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PlayerInfoComponent.tsx":"13","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\auth.tsx":"14","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\utils.ts":"15","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\GameStateProvider.ts":"16"},{"size":1096,"mtime":1645471722270,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1544,"mtime":1645041100540,"results":"20","hashOfConfig":"18"},{"size":1833,"mtime":1633369246955,"results":"21","hashOfConfig":"18"},{"size":4982,"mtime":1645469360510,"results":"22","hashOfConfig":"18"},{"size":349,"mtime":1645041214977,"results":"23","hashOfConfig":"18"},{"size":720,"mtime":1631648629652,"results":"24","hashOfConfig":"18"},{"size":3626,"mtime":1645041381333,"results":"25","hashOfConfig":"18"},{"size":4050,"mtime":1645469041794,"results":"26","hashOfConfig":"18"},{"size":1618,"mtime":1645040983946,"results":"27","hashOfConfig":"18"},{"size":4953,"mtime":1645471776139,"results":"28","hashOfConfig":"18"},{"size":309,"mtime":1644347841098,"results":"29","hashOfConfig":"18"},{"size":2166,"mtime":1645563515773,"results":"30","hashOfConfig":"18"},{"size":2663,"mtime":1633982582203,"results":"31","hashOfConfig":"18"},{"size":180,"mtime":1644258702122,"results":"32","hashOfConfig":"18"},{"size":6719,"mtime":1645041334409,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1h0kiwd",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\index.tsx",[],["77","78"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\App.tsx",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LoginComponent.tsx",["79","80","81","82","83"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL, usePlayers } from '../state';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const LoginComponent = () => {\r\n\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    const handleLogin = () => {\r\n\r\n        if( isLoading )\r\n            return;\r\n\r\n        setIsLoading(true);\r\n        const usernameInput = document.getElementById(\"txtUsername\") as HTMLInputElement;\r\n        const passwordInput = document.getElementById(\"txtPassword\") as HTMLInputElement;\r\n        \r\n        console.log(\"Sending: \"+usernameInput.value+\", \"+passwordInput.value);\r\n    };\r\n\r\n    return (\r\n        <LoginPanel>\r\n            <TextField placeholder=\"Username\" id=\"txtUsername\" />\r\n            <TextField placeholder=\"Password\" password id=\"txtPassword\" />\r\n            <Button onClick={ handleLogin }>Login</Button>\r\n            <ToastContainer></ToastContainer>\r\n        </LoginPanel>\r\n    );\r\n}\r\n\r\nconst LoginPanel = styled.div`\r\nwidth: 183px;\r\n    border-radius: 6px;\r\n    padding: 20px;\r\n    background: #1e2529;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TextField = styled.input.attrs(props => ({\r\n    type: props.password ? \"password\" : \"text\"\r\n}))`\r\nheight: 22px;\r\npadding: 5px;\r\nborder: 2px solid 2196f3;\r\nmargin-top: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    height: 30px;\r\n    background: #2196f3;\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin-top: 5px;\r\n    width: 181px;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    &:active {\r\n        border: 1px;\r\n        border-style: inset;\r\n        user-select: none;\r\n    }\r\n`;",["84","85"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\GameBoardComponent.tsx",["86","87","88","89","90","91","92","93"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BoardTileComponent, TileDropType } from './BoardTileComponent';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\nimport { BoardTile, GameState, LetterTile } from '../../../scrabble-backend/server';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\nimport { useGameState } from '../util/GameStateProvider';\r\nimport { useCallback } from 'react';\r\nimport { PlayerInfo } from './PlayerInfoComponent';\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n    const { gameState, \r\n        moveLetterFromHandToBoard, \r\n        moveLetterToHandFromPouch, \r\n        getPlayers, \r\n        togglePlayerTurn, \r\n        moveLetterToPouchFromHand,\r\n        updatePlayerPoints,\r\n        moveLetterFromBoardToBoard,\r\n        moveLetterFromBoardToHand } = useGameState();\r\n\r\n    const handleLetterTileDrop = async (letterTile: LetterTile,dropType: TileDropType, x: number, y: number, newX?: number, newY?: number) => {\r\n        if (dropType === TileDropType.HAND_TO_POUCH )\r\n            await moveLetterToPouchFromHand(letterTile);\r\n        else if( dropType === TileDropType.HAND_TO_BOARD )\r\n            await moveLetterFromHandToBoard(letterTile, x, y);\r\n        else if( dropType == TileDropType.BOARD_TO_HAND )\r\n            await moveLetterFromBoardToHand(letterTile);\r\n        else\r\n            await moveLetterFromBoardToBoard(letterTile, x, y);\r\n    };\r\n\r\n    const handleEndTurnClicked = useCallback(async () => {\r\n        await togglePlayerTurn();\r\n    }, [togglePlayerTurn]);\r\n\r\n    const isCurrentPlayerActive = useCallback(() => {\r\n        return getCurrentPlayerName() === gameState.turnOfPlayer;\r\n    }, [gameState, getCurrentPlayerName]);\r\n\r\n    const handlePointsUpdated = async (playerName : string, newPoints : number) => {\r\n        await updatePlayerPoints(playerName, newPoints);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MainDiv>\r\n                {\r\n                    isCurrentPlayerActive() ? <></> : <InactivePlayerBlocker>Not your turn</InactivePlayerBlocker>\r\n                }\r\n                <BoardComponent>\r\n                    {gameState.board.map((x, y) => (\r\n                        x.map((tile, i) => (\r\n                            <BoardTileComponent\r\n                                key={i}\r\n                                letterTile={ tile.letterTile }\r\n                                tileXPos={y}\r\n                                tileYPos={i}\r\n                                tileDropped={handleLetterTileDrop}\r\n                                tileType={tile.tileType}>\r\n                            </BoardTileComponent>))\r\n                    ))}\r\n                </BoardComponent>\r\n                <PlayerContainer>\r\n                {getPlayers().map(player => (\r\n                        <PlayerInfo isActive={gameState.turnOfPlayer === player} key={player} points={gameState.playerPoints[player]} name={player} pointsUpdated={handlePointsUpdated}></PlayerInfo>\r\n                    ))\r\n                }\r\n                <EndTurnButton onClick={handleEndTurnClicked} >End turn</EndTurnButton>\r\n                </PlayerContainer>\r\n                <BottomContainer>\r\n                    <HandComponent tileDropped={handleLetterTileDrop} letters={gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []} />\r\n                    <PouchComponent\r\n                        letters={gameState.pouchLetters !== undefined ? gameState.pouchLetters : []}\r\n                        moveLetterToHandFromPouch={moveLetterToHandFromPouch}\r\n                        tileDropped= {handleLetterTileDrop}\r\n                    />\r\n                </BottomContainer>\r\n            </MainDiv>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PlayerContainer = styled.div`\r\n    position: absolute;\r\n    right: 10%;\r\n    top: 1px;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-direction: column;`;\r\n\r\nconst EndTurnButton = styled.button`\r\nwidth: 100px;\r\npadding: 5px;\r\nheight: 50px;\r\nbackground: #eef1e3;\r\nborder-radius: 4px;\r\nmargin-top: 10px;\r\npadding: 10px;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst MainDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`;\r\n\r\nconst InactivePlayerBlocker = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  background: #762f2f;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #979797;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\nmargin-top:5px;\r\npadding: 4px;\r\npadding-right: 5px;\r\nborder-radius: 3px;\r\n`;","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\state.ts",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\Lobby.tsx",["94","95","96"],"import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePlayers } from '../state';\r\n\r\nexport const Lobby = () => {\r\n\r\n    const { players, setPlayers } = usePlayers();\r\n\r\n    const updateF = () => {\r\n\r\n        setPlayers( [ ...players,{name:\"kakka\"}]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n              {players.map( (player) => (\r\n                <li>{player.name}</li>\r\n              ))}\r\n            </ul>\r\n            <StartButton onClick={ updateF }>Start</StartButton>\r\n            <LeaveButton></LeaveButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StartButton = styled.button`\r\n`;\r\n\r\nconst LeaveButton = styled.div``;\r\n\r\nconst PlayerList = styled.ul``;","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PouchComponent.tsx",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\HandComponent.tsx",["97","98","99","100"],"import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/server';\r\nimport { LetterTileComponent, LetterTileTransferData } from './LetterTileComponent';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\nimport { useCallback } from 'react';\r\nimport { TileDropType } from './BoardTileComponent';\r\n\r\nexport type HandComponentProps = {\r\n    letters: LetterTile[];\r\n    tileDropped : (tile : LetterTile, dropType : TileDropType,x: number, y: number) => void;\r\n}\r\n\r\nexport const HandComponent = (props: HandComponentProps) => {\r\n\r\n    const [ letters, setLetters ] = useState<LetterTile[]>([]);\r\n\r\n    const setOrderedLetters = (newLetters : LetterTile[]) => {\r\n        const newLetterTiles = newLetters.filter( nl => letters.findIndex( letter => letter.id === nl.id ) === -1);\r\n        const missingLetterTiles = letters.filter( letter => newLetters.findIndex( nl => nl.id === letter.id) === -1 );\r\n\r\n        if( newLetterTiles.length === 0 && missingLetterTiles.length === 0 ) return;\r\n        const orderedLetterArray = [...letters];\r\n        missingLetterTiles.forEach( missingLetter => {\r\n            const idx = orderedLetterArray.findIndex( letter => letter.id === missingLetter.id);\r\n            orderedLetterArray.splice(idx,1);\r\n        });\r\n\r\n        newLetterTiles.forEach(newLetter => orderedLetterArray.push(newLetter));\r\n        setLetters(orderedLetterArray);\r\n    }\r\n\r\n    useEffect( () => {\r\n        //setLetterOrder(props.letters);\r\n        //setLetters(props.letters);\r\n        setOrderedLetters(props.letters);\r\n    },[props.letters, setOrderedLetters])\r\n\r\n    const calculateLeftPos = (i) => {\r\n        const leftPosNumber = i * 40;\r\n        return \"\" + leftPosNumber;\r\n    }\r\n\r\n    const setLetterOrder = useCallback((letterTiles : LetterTile[]) => {\r\n        if( !letters ) return;\r\n\r\n        for(let i = 0; i < letterTiles.length; i++) {\r\n            const orderedIdx = letters.findIndex( l => l.id === letterTiles[i].id );\r\n            if( orderedIdx > -1 && i !== orderedIdx ) {\r\n                const temp = letterTiles[orderedIdx];\r\n                letterTiles[orderedIdx] = letters[i];\r\n                const tempIdx = letters.findIndex( ( stateLetter => stateLetter.id === temp.id ));\r\n                if( tempIdx > -1 )\r\n                    letterTiles[tempIdx] = temp;\r\n            }\r\n        }\r\n    },[letters]);\r\n\r\n    const handleDragDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        const letterTransferData = JSON.parse(e.dataTransfer.getData(\"text/plain\")) as LetterTileTransferData;\r\n        const letterTileEl = document.getElementById(letterTransferData.elementId);\r\n        const letterTile = letterTransferData.letterTile;\r\n        props.tileDropped(letterTile, TileDropType.BOARD_TO_HAND,-1,-1);\r\n    };\r\n\r\n    const handleLetterDrop = (letter : LetterTile, targetLetter : LetterTile) => {\r\n        \r\n        const movedLetterIdx = letters.findIndex( (propLetter => propLetter.id === letter.id));\r\n        const targetTileIdx = letters.findIndex( (propLetter) => propLetter.id === targetLetter.id );\r\n\r\n        if( movedLetterIdx < 0 || targetTileIdx < 0 ) return;\r\n\r\n        const handLettersCopy = [ ...letters];\r\n        const targetTile = handLettersCopy[targetTileIdx];\r\n        handLettersCopy[targetTileIdx] = handLettersCopy[movedLetterIdx];\r\n        handLettersCopy[movedLetterIdx] = targetTile;\r\n        setLetters(handLettersCopy)\r\n    }\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Div onDragOver={handleDragOver} onDrop={handleDragDrop}>\r\n            {letters.map((letter, idx) => (\r\n                <LetterTileComponent key={idx} tileDropped = {handleLetterDrop} letter={letter} leftPos={calculateLeftPos(idx)}></LetterTileComponent>\r\n            ))}\r\n        </Div>\r\n    )\r\n}\r\n\r\nconst Div = styled.div`\r\nmargin-top: 10px;\r\nheight: 50px;\r\nwidth: 500px;\r\nbackground-color: #989a8e;\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\n`;","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LetterTileComponent.tsx",["101","102","103","104"],"import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/server';\r\n\r\nexport type LetterTileTransferData = {\r\n    letterTile : LetterTile;\r\n    elementId : string;\r\n};\r\n\r\nexport type LetterProps = {\r\n    leftPos: string;\r\n    letter : LetterTile\r\n    tileDropped? : (letter : LetterTile, targetLetter : LetterTile) => void;\r\n};\r\n\r\nconst getLetterTransferData = (letterTile : LetterTile, elementId : string ) => {\r\n    return {\r\n        letterTile : letterTile,\r\n        elementId : elementId\r\n    }\r\n};\r\n\r\nlet idCounter = 0;\r\n\r\nexport const LetterTileComponent = (props : LetterProps) => {\r\n\r\n    const id = idCounter++;\r\n    const elementId = \"letterTile_\"+props.letter.id;\r\n\r\n    const style = {\r\n        left: props.leftPos+\"px\"\r\n    }\r\n\r\n    const handleDragStart = (e) => {\r\n        e.dataTransfer.setData(\"text/plain\", JSON.stringify(getLetterTransferData(props.letter, elementId)));\r\n    }\r\n\r\n    const handleDragDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        const letterTransferData = JSON.parse(e.dataTransfer.getData(\"text/plain\")) as LetterTileTransferData;\r\n        const letterTile = letterTransferData.letterTile;\r\n\r\n        if( props.tileDropped ) \r\n            props.tileDropped(letterTile, props.letter);\r\n    }\r\n\r\n    return (\r\n        <div onDrop={handleDragDrop} onDragStart={ handleDragStart } draggable=\"true\" className=\"letterTile\" id={elementId}>\r\n            {props.letter.letter}\r\n            <div className=\"letterPoint\">\r\n                {props.letter.points}\r\n            </div>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\BoardTileComponent.tsx",["105","106","107","108","109","110","111","112","113","114","115","116","117"],"import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/server';\r\nimport { LetterTileComponent, LetterTileTransferData } from './LetterTileComponent';\r\n\r\nexport const N0R = 0,\r\n    X2W = 1,\r\n    X3W = 2,\r\n    X2L = 3,\r\n    X3L = 4,\r\n    CNT = 5;\r\n\r\nexport enum TileDropType {\r\n    HAND_TO_POUCH = 1,\r\n    HAND_TO_BOARD = 2,\r\n    BOARD_TO_BOARD = 3,\r\n    BOARD_TO_HAND = 4,\r\n}\r\n\r\nexport type BoardTileComponentProps = {\r\n    tileDropped : (tile : LetterTile, dropType : TileDropType,x: number, y: number) => void,\r\n    tileType : number,\r\n    tileXPos : number,\r\n    tileYPos : number,\r\n    letterTile : LetterTile | undefined\r\n};\r\n\r\nexport const BoardTileComponent = (props) => {\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const gridElementContainsTileElement = (gridElement : HTMLElement) => {\r\n        return gridElement.childElementCount > 0;\r\n    }\r\n/*\r\n    const handleDragEnter = (e) => {\r\n        if( isDropAllowed(e.target) ) return;\r\n        e.target.classList.add(\"grid-item-highlight\");\r\n    };\r\n\r\n    const handleDragLeave = (e) => {\r\n        if (!e.target.classList.contains(\"grid-item\") )\r\n            return;\r\n\r\n        e.target.classList.remove(\"grid-item-highlight\");\r\n    };\r\n*/\r\n    // Returns True if tile was dragged from a board tile to a board tile (as opposed to from hand onto the board)\r\n    const isOnBoardDrag = (letterTileEl : HTMLElement | null) => {\r\n        if( letterTileEl === null || letterTileEl.parentElement === null ) return false;\r\n        \r\n        return letterTileEl.parentElement.classList.contains(\"grid-item\");\r\n    }\r\n\r\n    const isDropAllowed = (droppedElement : HTMLElement) => {\r\n        if( !droppedElement.classList.contains(\"grid-item\") && !droppedElement.classList.contains(\"letterTile\"))\r\n            return false;\r\n\r\n        if( gridElementContainsTileElement(droppedElement) )\r\n            return false;\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleDragDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( !isDropAllowed(e.target) ) return;\r\n\r\n        e.target.classList.remove(\"grid-item-highlight\");\r\n\r\n        const letterTransferData = JSON.parse(e.dataTransfer.getData(\"text/plain\")) as LetterTileTransferData;\r\n        const letterTileEl = document.getElementById(letterTransferData.elementId);\r\n        const letterData = letterTransferData.letterTile;\r\n\r\n        // board tile to board tile\r\n        if( isOnBoardDrag(letterTileEl) ) {\r\n            props.tileDropped(letterData, TileDropType.BOARD_TO_BOARD, props.tileXPos, props.tileYPos);\r\n            return;\r\n        }\r\n\r\n        // Dropped on pouch\r\n        if( e.target.id === 'pouch' ) {\r\n            props.tileDropped(letterData, TileDropType.HAND_TO_POUCH);\r\n            return;\r\n        }\r\n\r\n        if (!letterTileEl || !e.target.classList.contains(\"grid-item\"))\r\n            return;\r\n\r\n        if (e.target.childElementCount > 0)\r\n            return;\r\n\r\n        if (props.tileType > 0 )\r\n            letterTileEl.style.top = \"-18px\";\r\n\r\n        letterTileEl.style.left = \"\";\r\n        //e.target.appendChild(letterTileEl);\r\n        \r\n        const letter = letterTileEl.innerText.charAt(0);\r\n        const points = parseInt(letterTileEl.children[0].innerHTML);\r\n\r\n        props.tileDropped(letterData, TileDropType.HAND_TO_BOARD, props.tileXPos, props.tileYPos);\r\n    };\r\n\r\n    const getTileStyle = (tileType) => {\r\n\r\n        return {\r\n            fontSize: \"11px\",\r\n            background: getTileColorFromProps(tileType)\r\n        }\r\n    }\r\n\r\n    const getTileColorFromProps = (tileType) => {\r\n\r\n        if (tileType == X2W)\r\n            return \"pink\";\r\n        else if (tileType == X3W)\r\n            return \"red\";\r\n        else if (tileType == X2L)\r\n            return \"cyan\";\r\n        else if (tileType == X3L)\r\n            return \"#4a4a91\";\r\n        else if (tileType == CNT)\r\n            return \"red\";\r\n\r\n        return \"\";\r\n    }\r\n\r\n    const getTileTextFromProps = (tileType) => {\r\n\r\n        if (tileType == X2W)\r\n            return \"2xWord\";\r\n        else if (tileType == X3W)\r\n            return \"3xWord\";\r\n        else if (tileType == X2L)\r\n            return \"2xLetter\";\r\n        else if (tileType == X3L)\r\n            return \"3xLetter\";\r\n\r\n        return \"\";\r\n    }\r\n\r\n    const getLetterTileFromProps = () => {\r\n        if( !props.letterTile )\r\n            return null;\r\n        \r\n        return (\r\n            <LetterTileComponent letter={props.letterTile} leftPos={\"0\"}></LetterTileComponent>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid-item\" \r\n        onDragOver={handleDragOver} \r\n        //onDragEnter={handleDragEnter} \r\n        //onDragLeave={handleDragLeave} \r\n        onDrop={handleDragDrop} \r\n        style={getTileStyle(props.tileType)}>\r\n            {getTileTextFromProps(props.tileType)}\r\n            {getLetterTileFromProps()}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\MainView.tsx",["118","119","120"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameBoardComponent } from './GameBoardComponent';\r\nimport { PlayerInfo } from './PlayerInfoComponent';\r\n\r\nexport const MainView = () => {\r\n    return (   \r\n      <GameBoardComponent></GameBoardComponent>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PlayerInfoComponent.tsx",["121"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\auth.tsx",["122","123"],"// Hook (use-auth.js)\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BE_URL } from \"./state\";\r\n\r\nconst authContext = createContext<AuthContext>({ user: null, login: (a: string, b:string)=>false, logout : () => false});\r\n// Provider component that wraps your app and makes auth object ...\r\n// ... available to any child component that calls useAuth().\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\nexport type AuthContext = {\r\n    user : string | null;\r\n    login : (username : string, password: string) => boolean;\r\n    logout : () => boolean;\r\n}\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth() : AuthContext {\r\n\r\n  const [user, setUser] = useState(null);\r\n  \r\n  const login = (username, password) => {\r\n    \r\n    axios.post(BE_URL+\"/login\",{\r\n        username: username,\r\n        password: password\r\n    }\r\n    ).then((response) => {\r\n\r\n        if( response.status == 200 ) {\r\n            setUser(username);\r\n            return true;\r\n        }\r\n        else {\r\n            toast(\"Login failed!\", {\r\n                position: \"bottom-center\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                });\r\n            setUser(null);\r\n        }\r\n    }).catch( (err) => {\r\n        toast(\"Login failed!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            });\r\n        setUser(null);\r\n    })\r\n\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n\r\n    setUser(null);\r\n    return true;\r\n  };\r\n  \r\n  // Subscribe to user on mount\r\n  // Because this sets state in the callback it will cause any ...\r\n  // ... component that utilizes this hook to re-render with the ...\r\n  // ... latest auth object.\r\n  useEffect(() => {\r\n\r\n    axios.get(`${BE_URL}/isLoggedIn?username=${user}`).then( (resp) => {\r\n        if( resp.data )\r\n            setUser(user);\r\n        else\r\n            setUser(null);\r\n    });\r\n  }, []);\r\n  // Return the user object and auth methods\r\n  return {\r\n    user,\r\n    login,\r\n    logout,\r\n  };\r\n}",["124","125"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\utils.ts",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\GameStateProvider.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"135","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":4,"column":18,"nodeType":"132","messageId":"133","endLine":4,"endColumn":28},{"ruleId":"130","severity":1,"message":"137","line":5,"column":26,"nodeType":"132","messageId":"133","endLine":5,"endColumn":31},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"140","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":29},{"ruleId":"130","severity":1,"message":"141","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":19},{"ruleId":"130","severity":1,"message":"142","line":7,"column":21,"nodeType":"132","messageId":"133","endLine":7,"endColumn":30},{"ruleId":"143","severity":1,"message":"144","line":30,"column":27,"nodeType":"145","messageId":"146","endLine":30,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":42,"column":8,"nodeType":"149","endLine":42,"endColumn":41,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"151","line":123,"column":7,"nodeType":"132","messageId":"133","endLine":123,"endColumn":20},{"ruleId":"130","severity":1,"message":"134","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":19},{"ruleId":"130","severity":1,"message":"140","line":1,"column":21,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"152","line":32,"column":7,"nodeType":"132","messageId":"133","endLine":32,"endColumn":17},{"ruleId":"130","severity":1,"message":"153","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":30},{"ruleId":"147","severity":1,"message":"154","line":18,"column":11,"nodeType":"155","endLine":31,"endColumn":6},{"ruleId":"130","severity":1,"message":"156","line":44,"column":11,"nodeType":"132","messageId":"133","endLine":44,"endColumn":25},{"ruleId":"130","severity":1,"message":"157","line":63,"column":15,"nodeType":"132","messageId":"133","endLine":63,"endColumn":27},{"ruleId":"130","severity":1,"message":"134","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":19},{"ruleId":"130","severity":1,"message":"158","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"159","line":27,"column":11,"nodeType":"132","messageId":"133","endLine":27,"endColumn":13},{"ruleId":"130","severity":1,"message":"160","line":30,"column":11,"nodeType":"132","messageId":"133","endLine":30,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":19},{"ruleId":"130","severity":1,"message":"158","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"161","line":102,"column":15,"nodeType":"132","messageId":"133","endLine":102,"endColumn":21},{"ruleId":"130","severity":1,"message":"162","line":103,"column":15,"nodeType":"132","messageId":"133","endLine":103,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":118,"column":22,"nodeType":"145","messageId":"146","endLine":118,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":120,"column":27,"nodeType":"145","messageId":"146","endLine":120,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":122,"column":27,"nodeType":"145","messageId":"146","endLine":122,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":124,"column":27,"nodeType":"145","messageId":"146","endLine":124,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":126,"column":27,"nodeType":"145","messageId":"146","endLine":126,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":134,"column":22,"nodeType":"145","messageId":"146","endLine":134,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":136,"column":27,"nodeType":"145","messageId":"146","endLine":136,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":138,"column":27,"nodeType":"145","messageId":"146","endLine":138,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":140,"column":27,"nodeType":"145","messageId":"146","endLine":140,"endColumn":29},{"ruleId":"130","severity":1,"message":"140","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"158","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"163","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":20},{"ruleId":"130","severity":1,"message":"164","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":39,"column":29,"nodeType":"145","messageId":"146","endLine":39,"endColumn":31},{"ruleId":"147","severity":1,"message":"165","line":87,"column":6,"nodeType":"149","endLine":87,"endColumn":8,"suggestions":"166"},{"ruleId":"126","replacedBy":"167"},{"ruleId":"128","replacedBy":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'BE_URL' is defined but never used.","'usePlayers' is defined but never used.","'toast' is defined but never used.",["169"],["170"],"'useState' is defined but never used.","'BoardTile' is defined but never used.","'GameState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'getCurrentPlayerName'. Either exclude it or remove the dependency array. Outer scope values like 'getCurrentPlayerName' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["171"],"'MainContainer' is assigned a value but never used.","'PlayerList' is assigned a value but never used.","'getCurrentPlayerName' is defined but never used.","The 'setOrderedLetters' function makes the dependencies of useEffect Hook (at line 37) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'setOrderedLetters' in its own useCallback() Hook.","VariableDeclarator","'setLetterOrder' is assigned a value but never used.","'letterTileEl' is assigned a value but never used.","'styled' is defined but never used.","'id' is assigned a value but never used.","'style' is assigned a value but never used.","'letter' is assigned a value but never used.","'points' is assigned a value but never used.","'PlayerInfo' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["172"],["169"],["170"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [gameState]",{"range":"177","text":"178"},"Update the dependencies array to be: [user]",{"range":"179","text":"180"},[1780,1813],"[gameState]",[2556,2558],"[user]"]