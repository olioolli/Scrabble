[{"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\index.tsx":"1","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\App.tsx":"3","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LoginComponent.tsx":"4","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\GameBoardComponent.tsx":"5","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\state.ts":"6","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\Lobby.tsx":"7","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PouchComponent.tsx":"8","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\HandComponent.tsx":"9","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LetterTileComponent.tsx":"10","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\BoardTileComponent.tsx":"11","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\MainView.tsx":"12","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PlayerInfoComponent.tsx":"13","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\auth.tsx":"14","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\utils.ts":"15","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\GameStateProvider.ts":"16"},{"size":1624,"mtime":1644704104336,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1830,"mtime":1644434967974,"results":"20","hashOfConfig":"18"},{"size":1833,"mtime":1633369246955,"results":"21","hashOfConfig":"18"},{"size":4591,"mtime":1644703854015,"results":"22","hashOfConfig":"18"},{"size":347,"mtime":1644434045160,"results":"23","hashOfConfig":"18"},{"size":720,"mtime":1631648629652,"results":"24","hashOfConfig":"18"},{"size":3726,"mtime":1644703753946,"results":"25","hashOfConfig":"18"},{"size":965,"mtime":1644257044346,"results":"26","hashOfConfig":"18"},{"size":1174,"mtime":1644702970278,"results":"27","hashOfConfig":"18"},{"size":4925,"mtime":1644703495889,"results":"28","hashOfConfig":"18"},{"size":309,"mtime":1644347841098,"results":"29","hashOfConfig":"18"},{"size":1602,"mtime":1644521530885,"results":"30","hashOfConfig":"18"},{"size":2663,"mtime":1633982582203,"results":"31","hashOfConfig":"18"},{"size":180,"mtime":1644258702122,"results":"32","hashOfConfig":"18"},{"size":6030,"mtime":1644692111866,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h0kiwd",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\index.tsx",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\reportWebVitals.ts",[],["78","79"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\App.tsx",["80","81","82","83","84","85","86"],"import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { LoginComponent } from './components/LoginComponent';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { GameBoardComponent } from './components/GameBoardComponent';\nimport styled from 'styled-components';\nimport { Lobby } from './components/Lobby';\nimport axios from 'axios';\nimport { MainView } from './components/MainView';\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/main\">\n         <PlayerSelectView></PlayerSelectView>\n        </Route>\n        <Route path=\"/player1\">\n          <MainView></MainView>\n        </Route>\n        <Route path=\"/player2\">\n          <MainView></MainView>\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n};\n\nconst PlayerSelectView = () => {\n\n  return (\n    <PlayerSelectContainer>\n      <TitleText>Scrabble 5000</TitleText>\n      <h1>Select a player:</h1>\n      <PlayerLink href={\"/player1\"}>Player 1</PlayerLink>\n      <PlayerLink href={\"/player2\"}>Player 2</PlayerLink>\n    </PlayerSelectContainer>\n  );\n  \n}\n\nconst TitleText = styled.p`\nfont-size: 60px;\ncolor: #386383;\n`;\n\nconst PlayerLink = styled.a`\n    font-size: 20px;\n`;\n\nconst PlayerSelectContainer = styled.div`\n    display: flex;\n    color: white;\n    flex-direction: column;\n    align-content: center;\n    align-items: center;\n    margin-top:10%;\n  `;\n/*\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n*/\nexport default App;\n","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LoginComponent.tsx",["87","88","89","90","91"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL, usePlayers } from '../state';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const LoginComponent = () => {\r\n\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    const handleLogin = () => {\r\n\r\n        if( isLoading )\r\n            return;\r\n\r\n        setIsLoading(true);\r\n        const usernameInput = document.getElementById(\"txtUsername\") as HTMLInputElement;\r\n        const passwordInput = document.getElementById(\"txtPassword\") as HTMLInputElement;\r\n        \r\n        console.log(\"Sending: \"+usernameInput.value+\", \"+passwordInput.value);\r\n    };\r\n\r\n    return (\r\n        <LoginPanel>\r\n            <TextField placeholder=\"Username\" id=\"txtUsername\" />\r\n            <TextField placeholder=\"Password\" password id=\"txtPassword\" />\r\n            <Button onClick={ handleLogin }>Login</Button>\r\n            <ToastContainer></ToastContainer>\r\n        </LoginPanel>\r\n    );\r\n}\r\n\r\nconst LoginPanel = styled.div`\r\nwidth: 183px;\r\n    border-radius: 6px;\r\n    padding: 20px;\r\n    background: #1e2529;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TextField = styled.input.attrs(props => ({\r\n    type: props.password ? \"password\" : \"text\"\r\n}))`\r\nheight: 22px;\r\npadding: 5px;\r\nborder: 2px solid 2196f3;\r\nmargin-top: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    height: 30px;\r\n    background: #2196f3;\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin-top: 5px;\r\n    width: 181px;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    &:active {\r\n        border: 1px;\r\n        border-style: inset;\r\n        user-select: none;\r\n    }\r\n`;",["92","93"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\GameBoardComponent.tsx",["94","95","96","97","98","99","100"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\state.ts",["101"],"import { useState } from \"react\";\r\nimport { Player } from \"./types/types\";\r\n\r\nexport const usePlayers = () => {\r\n\r\n  const [ players, setPlayers ] = useState(<Player[]>[]);\r\n  \r\n return {\r\n   players : players,\r\n   setPlayers : setPlayers\r\n };\r\n}\r\n\r\nexport const BE_URL = \"http://localhost:5000\";\r\n\r\nexport const BE_WS_URL = \"ws://localhost:8999\";","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\Lobby.tsx",["102","103","104"],"import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePlayers } from '../state';\r\n\r\nexport const Lobby = () => {\r\n\r\n    const { players, setPlayers } = usePlayers();\r\n\r\n    const updateF = () => {\r\n\r\n        setPlayers( [ ...players,{name:\"kakka\"}]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n              {players.map( (player) => (\r\n                <li>{player.name}</li>\r\n              ))}\r\n            </ul>\r\n            <StartButton onClick={ updateF }>Start</StartButton>\r\n            <LeaveButton></LeaveButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StartButton = styled.button`\r\n`;\r\n\r\nconst LeaveButton = styled.div``;\r\n\r\nconst PlayerList = styled.ul``;","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PouchComponent.tsx",["105","106","107"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\HandComponent.tsx",["108","109","110","111"],"import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterTile } from '../../../scrabble-backend/server';\r\nimport { LetterTileComponent } from './LetterTileComponent';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\nimport { useCallback } from 'react';\r\n\r\nexport type HandComponentProps = {\r\n    letters : LetterTile[];\r\n}\r\n\r\nexport const HandComponent = (props : HandComponentProps) => {\r\n\r\n    const calculateLeftPos = (i) => {\r\n        const leftPosNumber = i * 40;\r\n        return \"\"+leftPosNumber;\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            {props.letters.map( (letter, idx) => (\r\n               <LetterTileComponent letter={letter} leftPos={calculateLeftPos(idx)}></LetterTileComponent> \r\n            ))}\r\n        </Div>\r\n    )\r\n}\r\n\r\nconst Div = styled.div`\r\nmargin-top: 10px;\r\nheight: 50px;\r\nwidth: 500px;\r\nbackground-color: #989a8e;\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\n`;","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\LetterTileComponent.tsx",["112","113","114","115"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\BoardTileComponent.tsx",["116","117","118","119","120","121","122","123","124","125","126","127","128"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\MainView.tsx",["129","130","131"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameBoardComponent } from './GameBoardComponent';\r\nimport { PlayerInfo } from './PlayerInfoComponent';\r\n\r\nexport const MainView = () => {\r\n    return (   \r\n      <GameBoardComponent></GameBoardComponent>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\components\\PlayerInfoComponent.tsx",["132"],"import React, { useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type PlayerInfoProps = {\r\n  pointsUpdated : (playerName : string, newPointValue : number) => void;\r\n  isActive : boolean,\r\n  name: string\r\n  points : number;\r\n}\r\n\r\nexport const PlayerInfo = (props : PlayerInfoProps) => {\r\n\r\n    const PlayerContainer = styled.div`\r\n    border: 1px solid black;\r\n      padding: 10px;\r\n      min-width: 57px;\r\n      padding-left: 15px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: white;\r\n    & > div {\r\n      display: inline-block;\r\n    }`;\r\n  \r\n    const PointButton = styled.button`\r\n      height: 100%;\r\n    `;\r\n  \r\n    const FlexDivRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 10px;\r\n    border: ${props => props.isActive ? \"red 1px solid\" : \"none\"}\r\n    `;\r\n  \r\n    const FlexDivCol = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    `;\r\n  \r\n    const [points, setPoints] = useState(props.points);\r\n  \r\n    const handlePointsChanged = (change : number) => {\r\n      setPoints( points + change );\r\n      props.pointsUpdated(props.name, points);\r\n    };\r\n\r\n    return (\r\n      <FlexDivRow>\r\n        <PlayerContainer>\r\n          <div>{props.name}</div>\r\n          <div>{points + \"pts\"}</div>\r\n        </PlayerContainer>\r\n        <FlexDivCol>\r\n          <PointButton onClick={() => handlePointsChanged(1)}>+</PointButton>\r\n          <PointButton onClick={() => handlePointsChanged(-1)}>-</PointButton>\r\n        </FlexDivCol>\r\n      </FlexDivRow>\r\n    )\r\n  }","C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\auth.tsx",["133","134"],"// Hook (use-auth.js)\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BE_URL } from \"./state\";\r\n\r\nconst authContext = createContext<AuthContext>({ user: null, login: (a: string, b:string)=>false, logout : () => false});\r\n// Provider component that wraps your app and makes auth object ...\r\n// ... available to any child component that calls useAuth().\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\nexport type AuthContext = {\r\n    user : string | null;\r\n    login : (username : string, password: string) => boolean;\r\n    logout : () => boolean;\r\n}\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth() : AuthContext {\r\n\r\n  const [user, setUser] = useState(null);\r\n  \r\n  const login = (username, password) => {\r\n    \r\n    axios.post(BE_URL+\"/login\",{\r\n        username: username,\r\n        password: password\r\n    }\r\n    ).then((response) => {\r\n\r\n        if( response.status == 200 ) {\r\n            setUser(username);\r\n            return true;\r\n        }\r\n        else {\r\n            toast(\"Login failed!\", {\r\n                position: \"bottom-center\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                });\r\n            setUser(null);\r\n        }\r\n    }).catch( (err) => {\r\n        toast(\"Login failed!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            });\r\n        setUser(null);\r\n    })\r\n\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n\r\n    setUser(null);\r\n    return true;\r\n  };\r\n  \r\n  // Subscribe to user on mount\r\n  // Because this sets state in the callback it will cause any ...\r\n  // ... component that utilizes this hook to re-render with the ...\r\n  // ... latest auth object.\r\n  useEffect(() => {\r\n\r\n    axios.get(`${BE_URL}/isLoggedIn?username=${user}`).then( (resp) => {\r\n        if( resp.data )\r\n            setUser(user);\r\n        else\r\n            setUser(null);\r\n    });\r\n  }, []);\r\n  // Return the user object and auth methods\r\n  return {\r\n    user,\r\n    login,\r\n    logout,\r\n  };\r\n}",["135","136"],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\utils.ts",[],"C:\\Users\\Olli\\Documents\\scrabble-app\\my-app\\src\\util\\GameStateProvider.ts",["137","138"],"import axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { BoardTile, GameState, LetterTile } from \"../../../scrabble-backend/server\";\r\nimport { BE_URL, BE_WS_URL } from \"../state\";\r\nimport { getCurrentPlayerName } from \"./utils\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nconst initialGameState = {\r\n    playerPoints: {},\r\n    turnOfPlayer: \"\",\r\n    pouchLetters: [],\r\n    board: [],\r\n    playerHands: {}\r\n}\r\n\r\nexport const useGameState = () => {\r\n\r\n    const players = [\"Player1\", \"Player2\"]; // TODO: move to backend\r\n\r\n    const [gameState, setGameState] = useState<GameState>(initialGameState);\r\n\r\n    const copyState = (): GameState => {\r\n\r\n        const playerPoints = {};\r\n        const turnOfPlayer = \"\" + gameState.turnOfPlayer;\r\n        const pouchLetters = [...gameState.pouchLetters];\r\n        const board: BoardTile[][] = [];\r\n        const playerHands: Record<string, LetterTile[]> = {};\r\n\r\n        for(var i = 0; i < gameState.playerPoints.length; i++)\r\n            playerPoints[i] = gameState.playerPoints[i];\r\n\r\n        for (var i = 0; i < gameState.board.length; i++)\r\n            board[i] = gameState.board[i].slice();\r\n\r\n        for (let i in gameState.playerHands)\r\n            playerHands[i] = gameState.playerHands[i].slice();\r\n\r\n        return {\r\n            playerPoints,\r\n            turnOfPlayer,\r\n            pouchLetters,\r\n            board,\r\n            playerHands\r\n        }\r\n    }\r\n\r\n    const fetchGameStateFromBe = useCallback(() => {\r\n        axios.get(BE_URL + \"/game\").then((resp) => {\r\n            setGameState(resp.data);\r\n        })\r\n    }, []);\r\n\r\n    const sendGameStateToBE = async (state: GameState) => {\r\n        const resp = await axios.post(BE_URL + \"/game\", { game: state });\r\n        setGameState(resp.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let client = new W3CWebSocket(BE_WS_URL);\r\n\r\n        client.onopen = () => {};\r\n\r\n        client.onmessage = (message) => {\r\n\r\n            const newGameState = JSON.parse(message.data as string);\r\n            if (newGameState)\r\n                setGameState(newGameState);\r\n        };\r\n\r\n        fetchGameStateFromBe();\r\n    }, [fetchGameStateFromBe]);\r\n\r\n    const getPlayers = (): string[] => players;\r\n\r\n    const togglePlayerTurn = useCallback(async () => {\r\n        const gameStateCopy = copyState();\r\n        const nextPlayer = gameStateCopy.turnOfPlayer === players[0] ? players[1] : players[0];\r\n        gameStateCopy.turnOfPlayer = nextPlayer;\r\n        await sendGameStateToBE(gameStateCopy);\r\n    }, [gameState, copyState]);\r\n\r\n    const moveLetterToPouchFromHand = async (letter: LetterTile) => {\r\n        const gameStateCopy = copyState();\r\n\r\n        const idx = gameStateCopy.playerHands[getCurrentPlayerName()].findIndex(l => l.id === letter.id);\r\n        gameStateCopy.playerHands[getCurrentPlayerName()].splice(idx, 1);\r\n        gameStateCopy.pouchLetters.push(letter);\r\n        await sendGameStateToBE(gameStateCopy);\r\n    };\r\n\r\n    const moveLetterToHandFromPouch = async (letter: LetterTile) => {\r\n        const idx = gameState.pouchLetters.findIndex((pouchLetter) => pouchLetter.id === letter.id);\r\n        if (idx === -1) return;\r\n\r\n        const gameStateCopy = copyState();\r\n\r\n        gameStateCopy.pouchLetters.splice(idx, 1);\r\n        gameStateCopy.playerHands[getCurrentPlayerName()].push(letter);\r\n\r\n        await sendGameStateToBE(gameStateCopy);\r\n    }\r\n\r\n    const removeTileFromPlayerHand = (hand: LetterTile[], letterTile: LetterTile) => {\r\n        if (!hand || hand.length === 0) return;\r\n\r\n        const tileIdx = hand.findIndex((tile, idx) => tile.id === letterTile.id);\r\n        if (tileIdx === -1) return;\r\n\r\n        hand.splice(tileIdx, 1);\r\n    }\r\n\r\n    const moveLetterFromHandToBoard = async (letterTile: LetterTile, x: number, y: number) => {\r\n        const stateCopy = copyState();\r\n\r\n        // update board\r\n        stateCopy.board[x][y].letter = letterTile.letter;\r\n        stateCopy.board[x][y].points = letterTile.points;\r\n        stateCopy.board[x][y].letterTile = letterTile;\r\n\r\n        //update hand\r\n        removeTileFromPlayerHand(stateCopy.playerHands[getCurrentPlayerName()], letterTile);\r\n\r\n        await sendGameStateToBE(stateCopy);\r\n    }\r\n\r\n    const getLetterPosition = (letterTile : LetterTile) => {\r\n        for(let i = 0; i < gameState.board.length; i++) \r\n            for(let j = 0; j < gameState.board.length; j++)\r\n                if( gameState.board[i][j].letterTile?.id === letterTile.id )\r\n                    return { x: i, y: j };\r\n\r\n        return null;\r\n    };\r\n\r\n    const moveLetterFromBoardToBoard = async (letterTile : LetterTile, x : number, y : number) => {\r\n        const stateCopy = copyState();\r\n\r\n        const oldPosition = getLetterPosition(letterTile);\r\n        if( oldPosition === null ) return;\r\n\r\n        // update new pos\r\n        stateCopy.board[x][y].letter = letterTile.letter;\r\n        stateCopy.board[x][y].points = letterTile.points;\r\n        stateCopy.board[x][y].letterTile = letterTile;\r\n        // clear old pos\r\n        stateCopy.board[oldPosition.x][oldPosition.y].letter = undefined;\r\n        stateCopy.board[oldPosition.x][oldPosition.y].points = undefined;\r\n        stateCopy.board[oldPosition.x][oldPosition.y].letterTile = null;\r\n\r\n        await sendGameStateToBE(stateCopy);\r\n    };\r\n\r\n    const updatePlayerPoints = async (playerName : string, newPoints : number) => {\r\n        const stateCopy = copyState();\r\n        stateCopy.playerPoints[playerName] = newPoints;\r\n        await sendGameStateToBE(stateCopy);\r\n    }\r\n\r\n    return {\r\n        gameState: gameState,\r\n        setGameState: setGameState,\r\n        fetchGameStateFromBe: fetchGameStateFromBe,\r\n        moveLetterToHandFromPouch: moveLetterToHandFromPouch,\r\n        sendGameStateToBE: sendGameStateToBE,\r\n        moveLetterFromHandToBoard,\r\n        togglePlayerTurn,\r\n        getPlayers,\r\n        moveLetterToPouchFromHand,\r\n        updatePlayerPoints,\r\n        moveLetterFromBoardToBoard\r\n    }\r\n}",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"149","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":11},{"ruleId":"143","severity":1,"message":"150","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":28},{"ruleId":"143","severity":1,"message":"151","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":15},{"ruleId":"143","severity":1,"message":"152","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":13},{"ruleId":"143","severity":1,"message":"152","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"153","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"143","severity":1,"message":"154","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":16},{"ruleId":"143","severity":1,"message":"155","line":4,"column":18,"nodeType":"145","messageId":"146","endLine":4,"endColumn":28},{"ruleId":"143","severity":1,"message":"156","line":5,"column":26,"nodeType":"145","messageId":"146","endLine":5,"endColumn":31},{"ruleId":"139","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},{"ruleId":"143","severity":1,"message":"152","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"153","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":2,"column":21,"nodeType":"145","messageId":"146","endLine":2,"endColumn":29},{"ruleId":"143","severity":1,"message":"159","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":19},{"ruleId":"143","severity":1,"message":"160","line":7,"column":21,"nodeType":"145","messageId":"146","endLine":7,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":39,"column":8,"nodeType":"163","endLine":39,"endColumn":41,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"165","line":114,"column":7,"nodeType":"145","messageId":"146","endLine":114,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":6,"column":44,"nodeType":"168","messageId":"169","endLine":6,"endColumn":56},{"ruleId":"143","severity":1,"message":"153","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":1,"column":21,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"170","line":32,"column":7,"nodeType":"145","messageId":"146","endLine":32,"endColumn":17},{"ruleId":"143","severity":1,"message":"153","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"171","line":27,"column":6,"nodeType":"163","endLine":27,"endColumn":21,"suggestions":"172"},{"ruleId":"143","severity":1,"message":"173","line":43,"column":11,"nodeType":"145","messageId":"146","endLine":43,"endColumn":23},{"ruleId":"143","severity":1,"message":"153","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":1,"column":21,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"174","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":30},{"ruleId":"143","severity":1,"message":"175","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":21},{"ruleId":"143","severity":1,"message":"153","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":19},{"ruleId":"143","severity":1,"message":"176","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"177","line":26,"column":11,"nodeType":"145","messageId":"146","endLine":26,"endColumn":13},{"ruleId":"143","severity":1,"message":"178","line":29,"column":11,"nodeType":"145","messageId":"146","endLine":29,"endColumn":16},{"ruleId":"143","severity":1,"message":"153","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":19},{"ruleId":"143","severity":1,"message":"176","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"179","line":101,"column":15,"nodeType":"145","messageId":"146","endLine":101,"endColumn":21},{"ruleId":"143","severity":1,"message":"180","line":102,"column":15,"nodeType":"145","messageId":"146","endLine":102,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":117,"column":22,"nodeType":"183","messageId":"184","endLine":117,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":119,"column":27,"nodeType":"183","messageId":"184","endLine":119,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":121,"column":27,"nodeType":"183","messageId":"184","endLine":121,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":123,"column":27,"nodeType":"183","messageId":"184","endLine":123,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":125,"column":27,"nodeType":"183","messageId":"184","endLine":125,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":133,"column":22,"nodeType":"183","messageId":"184","endLine":133,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":135,"column":27,"nodeType":"183","messageId":"184","endLine":135,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":137,"column":27,"nodeType":"183","messageId":"184","endLine":137,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":139,"column":27,"nodeType":"183","messageId":"184","endLine":139,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"176","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"185","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"143","severity":1,"message":"175","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":39,"column":29,"nodeType":"183","messageId":"184","endLine":39,"endColumn":31},{"ruleId":"161","severity":1,"message":"186","line":87,"column":6,"nodeType":"163","endLine":87,"endColumn":8,"suggestions":"187"},{"ruleId":"139","replacedBy":"188"},{"ruleId":"141","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":33,"column":18,"nodeType":"145","messageId":"192","endLine":33,"endColumn":19},{"ruleId":"161","severity":1,"message":"193","line":82,"column":8,"nodeType":"163","endLine":82,"endColumn":30,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'LoginComponent' is defined but never used.","'Redirect' is defined but never used.","'GameBoardComponent' is defined but never used.","'Lobby' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'BE_URL' is defined but never used.","'usePlayers' is defined but never used.","'toast' is defined but never used.",["195"],["196"],"'BoardTile' is defined but never used.","'GameState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'getCurrentPlayerName'. Either exclude it or remove the dependency array. Outer scope values like 'getCurrentPlayerName' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["197"],"'MainContainer' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as Player[]' instead of '<Player[]>'.","TSTypeAssertion","as","'PlayerList' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["198"],"'letterTileEl' is assigned a value but never used.","'getCurrentPlayerName' is defined but never used.","'useCallback' is defined but never used.","'styled' is defined but never used.","'id' is assigned a value but never used.","'style' is assigned a value but never used.","'letter' is assigned a value but never used.","'points' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PlayerInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["199"],["195"],["196"],"@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","React Hook useCallback has a missing dependency: 'players'. Either include it or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [gameState]",{"range":"209","text":"210"},"Update the dependencies array to be: [props]",{"range":"211","text":"212"},"Update the dependencies array to be: [user]",{"range":"213","text":"214"},"Update the dependencies array to be: [copyState, players]",{"range":"215","text":"216"},[1625,1658],"[gameState]",[949,964],"[props]",[2556,2558],"[user]",[2570,2592],"[copyState, players]"]