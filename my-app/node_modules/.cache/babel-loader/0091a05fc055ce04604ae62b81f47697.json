{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\components\\\\BoardTileComponent.tsx\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const N0R = 0,\n      X2W = 1,\n      X3W = 2,\n      X2L = 3,\n      X3L = 4,\n      CNT = 5;\nexport const BoardTileComponent = props => {\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const handleDragEnter = e => {\n    if (!e.target.classList.contains(\"grid-item\")) return;\n    e.target.classList.add(\"grid-item-highlight\");\n  };\n\n  const handleDragLeave = e => {\n    if (!e.target.classList.contains(\"grid-item\")) return;\n    e.target.classList.remove(\"grid-item-highlight\");\n  };\n\n  const handleDragDrop = e => {\n    e.preventDefault();\n    e.target.classList.remove(\"grid-item-highlight\");\n    var data = e.dataTransfer.getData(\"text\");\n    var letterTileEl = document.getElementById(data);\n    if (!letterTileEl || !e.target.classList.contains(\"grid-item\")) return;\n    if (e.target.childElementCount > 0) return;\n    if (props.tileType > 0) letterTileEl.style.top = \"-18px\";\n    letterTileEl.style.left = \"\";\n    /*\r\n    var elPos = getLetterTilePosition(letterTileEl.parentNode, letterTileEl);\r\n    console.log(\"elPos: \" + elPos);\r\n    moveHandTilesLeft(letterTileEl.parentNode, elPos);\r\n    */\n\n    e.target.appendChild(letterTileEl);\n  };\n\n  const getTileStyle = tileType => {\n    return {\n      fontSize: \"11px\",\n      background: getTileColorFromProps(tileType)\n    };\n  };\n\n  const getTileColorFromProps = tileType => {\n    if (tileType == X2W) return \"pink\";else if (tileType == X3W) return \"red\";else if (tileType == X2L) return \"cyan\";else if (tileType == X3L) return \"blue\";else if (tileType == CNT) return \"red\";\n    return \"\";\n  };\n\n  const getTileTextFromProps = tileType => {\n    if (tileType == X2W) return \"2xWord\";else if (tileType == X3W) return \"3xWord\";else if (tileType == X2L) return \"2xLetter\";else if (tileType == X3L) return \"3xLetter\";\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardTileDiv, {\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDragDrop: handleDragDrop,\n    style: getTileStyle(props.tileType),\n    children: getTileTextFromProps(props.tileType)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_c = BoardTileComponent;\nconst BoardTileDiv = styled.div`\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 1px solid rgba(0, 0, 0, 0.8);\n    text-align: center;\n    padding: 4px;\n    width: 38px;\n    height: 38px;\n`;\n_c2 = BoardTileDiv;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardTileComponent\");\n$RefreshReg$(_c2, \"BoardTileDiv\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/BoardTileComponent.tsx"],"names":["styled","N0R","X2W","X3W","X2L","X3L","CNT","BoardTileComponent","props","handleDragOver","e","preventDefault","handleDragEnter","target","classList","contains","add","handleDragLeave","remove","handleDragDrop","data","dataTransfer","getData","letterTileEl","document","getElementById","childElementCount","tileType","style","top","left","appendChild","getTileStyle","fontSize","background","getTileColorFromProps","getTileTextFromProps","BoardTileDiv","div"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const N0R = 0,\r\n    X2W = 1,\r\n    X3W = 2,\r\n    X2L = 3,\r\n    X3L = 4,\r\n    CNT = 5;\r\n\r\nexport const BoardTileComponent = (props) => {\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDragEnter = (e) => {\r\n        if (!e.target.classList.contains(\"grid-item\"))\r\n            return;\r\n\r\n        e.target.classList.add(\"grid-item-highlight\");\r\n    };\r\n\r\n    const handleDragLeave = (e) => {\r\n        if (!e.target.classList.contains(\"grid-item\"))\r\n            return;\r\n\r\n        e.target.classList.remove(\"grid-item-highlight\");\r\n    };\r\n\r\n    const handleDragDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        e.target.classList.remove(\"grid-item-highlight\");\r\n\r\n        var data = e.dataTransfer.getData(\"text\");\r\n        var letterTileEl = document.getElementById(data);\r\n\r\n        if (!letterTileEl || !e.target.classList.contains(\"grid-item\"))\r\n            return;\r\n\r\n        if (e.target.childElementCount > 0)\r\n            return;\r\n\r\n        if (props.tileType > 0 )\r\n            letterTileEl.style.top = \"-18px\";\r\n\r\n        letterTileEl.style.left = \"\";\r\n        /*\r\n        var elPos = getLetterTilePosition(letterTileEl.parentNode, letterTileEl);\r\n        console.log(\"elPos: \" + elPos);\r\n        moveHandTilesLeft(letterTileEl.parentNode, elPos);\r\n        */\r\n        e.target.appendChild(letterTileEl);\r\n    };\r\n\r\n    const getTileStyle = (tileType) => {\r\n\r\n        return {\r\n            fontSize: \"11px\",\r\n            background: getTileColorFromProps(tileType)\r\n        }\r\n    }\r\n\r\n    const getTileColorFromProps = (tileType) => {\r\n\r\n        if (tileType == X2W)\r\n            return \"pink\";\r\n        else if (tileType == X3W)\r\n            return \"red\";\r\n        else if (tileType == X2L)\r\n            return \"cyan\";\r\n        else if (tileType == X3L)\r\n            return \"blue\";\r\n        else if (tileType == CNT)\r\n            return \"red\";\r\n\r\n        return \"\";\r\n    }\r\n\r\n    const getTileTextFromProps = (tileType) => {\r\n\r\n        if (tileType == X2W)\r\n            return \"2xWord\";\r\n        else if (tileType == X3W)\r\n            return \"3xWord\";\r\n        else if (tileType == X2L)\r\n            return \"2xLetter\";\r\n        else if (tileType == X3L)\r\n            return \"3xLetter\";\r\n\r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <BoardTileDiv onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDragDrop={handleDragDrop} style={getTileStyle(props.tileType)}>{getTileTextFromProps(props.tileType)}\r\n        </BoardTileDiv>\r\n    )\r\n}\r\n\r\nconst BoardTileDiv = styled.div`\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid rgba(0, 0, 0, 0.8);\r\n    text-align: center;\r\n    padding: 4px;\r\n    width: 38px;\r\n    height: 38px;\r\n`;"]},"metadata":{},"sourceType":"module"}