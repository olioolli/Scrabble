{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { BE_URL } from \"../state\";\nimport { getCurrentPlayerName } from \"./utils\";\nconst initialGameState = {\n  playerPoints: [],\n  turnOfPlayer: \"\",\n  pouchLetters: [],\n  board: [],\n  playerHands: {}\n};\nexport const useGameState = () => {\n  _s();\n\n  const [gameState, setGameState] = useState(initialGameState);\n  const [board, setBoard] = useState([]);\n  const [pouchLetters, setPouchLetters] = useState([]);\n  const fetchGameStateFromBe = useCallback(() => {\n    axios.get(BE_URL + \"/game\").then(resp => {\n      setGameState(resp.data);\n      setBoard(resp.data.board);\n      setPouchLetters(resp.data.pouchLetters);\n    });\n  }, []);\n\n  const sendGameStateToBE = async state => {\n    const resp = await axios.post(BE_URL + \"/game\", {\n      game: state\n    });\n    return resp.data;\n  };\n\n  useEffect(() => {\n    fetchGameStateFromBe();\n  }, [fetchGameStateFromBe]);\n\n  const moveLetterToHandFromPouch = async letter => {\n    const idx = gameState.pouchLetters.findIndex(pouchLetter => pouchLetter.id === letter.id);\n    if (idx === -1) return;\n    const newPouchLetters = [...gameState.pouchLetters];\n    newPouchLetters.splice(idx, 1);\n    gameState.pouchLetters = newPouchLetters;\n    const newPlayerHand = [...gameState.playerHands[getCurrentPlayerName()]];\n    newPlayerHand.push(letter);\n    gameState.playerHands[getCurrentPlayerName()] = newPlayerHand;\n    await sendGameStateToBE(gameState);\n    setGameState(gameState);\n  };\n\n  return {\n    gameState: gameState,\n    setGameState: setGameState,\n    board: board,\n    setBoard: setBoard,\n    fetchGameStateFromBe: fetchGameStateFromBe,\n    moveLetterToHandFromPouch: moveLetterToHandFromPouch,\n    sendGameStateToBE: sendGameStateToBE,\n    pouchLetters: pouchLetters,\n    setPouchLetters: setPouchLetters\n  };\n};\n\n_s(useGameState, \"MkjKgcx0A8mNb1inEGn54q2FrI4=\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/util/GameStateProvider.ts"],"names":["axios","useCallback","useEffect","useState","BE_URL","getCurrentPlayerName","initialGameState","playerPoints","turnOfPlayer","pouchLetters","board","playerHands","useGameState","gameState","setGameState","setBoard","setPouchLetters","fetchGameStateFromBe","get","then","resp","data","sendGameStateToBE","state","post","game","moveLetterToHandFromPouch","letter","idx","findIndex","pouchLetter","id","newPouchLetters","splice","newPlayerHand","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { BoardTile, GameState, LetterTile } from \"../../../scrabble-backend/server\";\r\nimport { BE_URL } from \"../state\";\r\nimport { getCurrentPlayerName } from \"./utils\";\r\n\r\nconst initialGameState = {\r\n    playerPoints: [],\r\n    turnOfPlayer: \"\",\r\n    pouchLetters: [],\r\n    board: [],\r\n    playerHands: {}\r\n}\r\n\r\nexport const useGameState = () => {\r\n\r\n    const [gameState, setGameState] = useState<GameState>(initialGameState);\r\n    const [board, setBoard] = useState<BoardTile[][]>([]);\r\n\r\n    const [pouchLetters, setPouchLetters] = useState<LetterTile[]>([]);\r\n\r\n    const fetchGameStateFromBe = useCallback( () => {\r\n        axios.get(BE_URL + \"/game\").then((resp) => {\r\n            setGameState(resp.data);\r\n            setBoard(resp.data.board);\r\n            setPouchLetters(resp.data.pouchLetters);\r\n        })\r\n    },[]);\r\n\r\n    const sendGameStateToBE = async (state : GameState) => {\r\n        const resp = await axios.post(BE_URL+\"/game\",{ game: state });\r\n        return resp.data;\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchGameStateFromBe();\r\n    }, [fetchGameStateFromBe]);\r\n\r\n    const moveLetterToHandFromPouch = async (letter : LetterTile) => {\r\n        const idx = gameState.pouchLetters.findIndex( (pouchLetter) => pouchLetter.id === letter.id );\r\n        if( idx === -1 ) return;\r\n        \r\n        const newPouchLetters = [...gameState.pouchLetters];\r\n        newPouchLetters.splice(idx,1);\r\n        gameState.pouchLetters = newPouchLetters;\r\n\r\n        const newPlayerHand = [...gameState.playerHands[getCurrentPlayerName()]];\r\n        newPlayerHand.push(letter);\r\n        gameState.playerHands[getCurrentPlayerName()] = newPlayerHand;\r\n\r\n        await sendGameStateToBE(gameState);\r\n        setGameState(gameState);\r\n    }\r\n\r\n    return {\r\n        gameState : gameState,\r\n        setGameState : setGameState,\r\n        board: board,\r\n        setBoard: setBoard,\r\n        fetchGameStateFromBe : fetchGameStateFromBe,\r\n        moveLetterToHandFromPouch : moveLetterToHandFromPouch,\r\n        sendGameStateToBE : sendGameStateToBE,\r\n        pouchLetters : pouchLetters,\r\n        setPouchLetters : setPouchLetters\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}