{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\components\\\\GameBoardComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { BoardTileComponent } from './BoardTileComponent';\nimport { HandComponent } from './HandComponent';\nimport { PouchComponent } from './PouchComponent';\nimport { getCurrentPlayerName } from '../util/utils';\nimport { useGameState } from '../util/GameStateProvider';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardComponent = () => {\n  _s();\n\n  const {\n    gameState,\n    setGameState,\n    sendGameStateToBE,\n    moveLetterFromHandToBoard,\n    moveLetterToHandFromPouch\n  } = useGameState();\n\n  const handleLetterTileDrop = async (letterTile, x, y) => {\n    await moveLetterFromHandToBoard(letterTile, x, y);\n  };\n\n  const copyPlayerHand = tile => {\n    if (!gameState.playerHands[getCurrentPlayerName()]) return [];\n    return [...gameState.playerHands[getCurrentPlayerName()]];\n  };\n\n  const isCurrentPlayerActive = () => {\n    if (gameState.turnOfPlayer === \"\") return true;\n    return getCurrentPlayerName() === gameState.turnOfPlayer;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isCurrentPlayerActive() ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(InactivePlayerBlocker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(BoardComponent, {\n      children: gameState.board.map((x, y) => x.map((tile, i) => /*#__PURE__*/_jsxDEV(BoardTileComponent, {\n        letterTile: tile.letter ? {\n          letter: tile.letter,\n          points: tile.points\n        } : undefined,\n        tileXPos: y,\n        tileYPos: i,\n        tileDropped: handleLetterTileDrop,\n        tileType: tile.tileType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ButtomContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HandComponent, {\n        letters: gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PouchComponent, {\n        letters: gameState.pouchLetters !== undefined ? gameState.pouchLetters : [],\n        moveLetterToHandFromPouch: moveLetterToHandFromPouch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GameBoardComponent, \"PtpAmRsYk3sgU+Lo0AKTqXjqdBI=\", false, function () {\n  return [useGameState];\n});\n\n_c = GameBoardComponent;\nconst InactivePlayerBlocker = styled.div`\n  width: 100%;\n  height: 100%;\n  z-index: 10000;\n  background: #762f2f;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  opacity: 0.6;\n`;\n_c2 = InactivePlayerBlocker;\nconst MainContainer = styled.div`\n\tdispaly: flex;\n`;\nconst ButtomContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n_c3 = ButtomContainer;\nconst BoardComponent = styled.div`\ndisplay: grid;\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\nbackground-color: #2196F3;\npadding: 2px;\nwidth: 718px;\nmargin: auto;\npadding: 10px;\n`;\n_c4 = BoardComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GameBoardComponent\");\n$RefreshReg$(_c2, \"InactivePlayerBlocker\");\n$RefreshReg$(_c3, \"ButtomContainer\");\n$RefreshReg$(_c4, \"BoardComponent\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/GameBoardComponent.tsx"],"names":["styled","BoardTileComponent","HandComponent","PouchComponent","getCurrentPlayerName","useGameState","GameBoardComponent","gameState","setGameState","sendGameStateToBE","moveLetterFromHandToBoard","moveLetterToHandFromPouch","handleLetterTileDrop","letterTile","x","y","copyPlayerHand","tile","playerHands","isCurrentPlayerActive","turnOfPlayer","board","map","i","letter","points","undefined","tileType","pouchLetters","InactivePlayerBlocker","div","MainContainer","ButtomContainer","BoardComponent"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL } from '../state';\r\nimport { BoardTileComponent } from './BoardTileComponent';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\nimport { BoardTile, GameState, LetterTile } from '../../../scrabble-backend/server';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\nimport { useGameState } from '../util/GameStateProvider';\r\nimport { useCallback } from 'react';\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n    const { gameState, setGameState, sendGameStateToBE, moveLetterFromHandToBoard, moveLetterToHandFromPouch } = useGameState();\r\n\r\n    const handleLetterTileDrop = async (letterTile : LetterTile, x : number, y : number) => {\r\n        await moveLetterFromHandToBoard(letterTile, x, y);\r\n    };\r\n\r\n    const copyPlayerHand = (tile : LetterTile) => {\r\n        if( !gameState.playerHands[getCurrentPlayerName()] ) return [];\r\n        return [...gameState.playerHands[getCurrentPlayerName()]];\r\n    }\r\n\r\n    const isCurrentPlayerActive = () : boolean => {\r\n        if( gameState.turnOfPlayer === \"\") return true;\r\n        return getCurrentPlayerName() === gameState.turnOfPlayer\r\n    };\r\n    \r\n    return (\r\n\t\t<div>\r\n            { isCurrentPlayerActive() ? <></> : <InactivePlayerBlocker></InactivePlayerBlocker>}\r\n        \t<BoardComponent>\r\n            \t{gameState.board.map( (x,y) => ( \r\n                    x.map( (tile,i) => (\r\n                    <BoardTileComponent \r\n                    letterTile={ tile.letter ? {letter: tile.letter, points: tile.points} : undefined } \r\n                    tileXPos={y} \r\n                    tileYPos={i} \r\n                    tileDropped={handleLetterTileDrop} \r\n                    tileType={tile.tileType}>\r\n                    </BoardTileComponent>))\r\n                ))}\r\n        \t</BoardComponent>\r\n\t\t\t<ButtomContainer>\r\n\t\t\t\t<HandComponent letters={gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []}/>\r\n\t\t\t\t<PouchComponent \r\n                letters={gameState.pouchLetters !== undefined ? gameState.pouchLetters : []} \r\n                moveLetterToHandFromPouch={moveLetterToHandFromPouch}\r\n                />\r\n\t\t\t</ButtomContainer>\r\n\t\t</div>\r\n                    \r\n    );\r\n}\r\n\r\nconst InactivePlayerBlocker = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  background: #762f2f;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst ButtomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #2196F3;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\npadding: 10px;\r\n`;"]},"metadata":{},"sourceType":"module"}