{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n/*\n\n1st Iteration\n*No login / players\n*Point setup for 2 players\n*Two URLs for players for showing different hands\n\n2nd Iteration\n*Login (player name)\n*Setup view before game starts\n*Single URL for all players\n*support for 'several' players\n\nTASKS\n\nIT1\n\n-Implement backend reset endpoint (DONE)\n\n-Remove tile from hand when drag complete\n *Add hand state to backend (DONE)\n *Fix dragging data transfer (DONE)\n *Update hand state when tiles move (DONE)\n\n-Add remaining special board tiles (DONE)\n\n-Prevent dragging tiles on board\n *Track if tile was placed this turn or not\n *Allow dragging of tiles placed this turn\n\n-Implement getting tiles from pouch\n *Show pouch letter count (DONE)\n *Put letter in pouch\n *Draw letter from pouch (DONE)\n\n-Implement player turns (DONE)\n *Two different URLs, one for each player (DONE)\n *End turn button (DONE)\n *Disable UI for non-active player (DONE)\n \n *Fix player names on screen (DONE)\n\n -Implement pushing updates from server to client\n  *Websocket?\n  *When tile placed, turn ended, etc client should update game state from be\n\n-Implement reset game functionality (DONE)\n\n-Performance enhancements: Add useCallbacks etc\n\nMISC\n*Indicate which player's screen is currently visible\nIT2\n\n-Implement player turns\n *Display current players hand (same URL)\n\n -Implement login\n *Add player to session\n*/","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,eAAe;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/*\n\n1st Iteration\n*No login / players\n*Point setup for 2 players\n*Two URLs for players for showing different hands\n\n2nd Iteration\n*Login (player name)\n*Setup view before game starts\n*Single URL for all players\n*support for 'several' players\n\nTASKS\n\nIT1\n\n-Implement backend reset endpoint (DONE)\n\n-Remove tile from hand when drag complete\n *Add hand state to backend (DONE)\n *Fix dragging data transfer (DONE)\n *Update hand state when tiles move (DONE)\n\n-Add remaining special board tiles (DONE)\n\n-Prevent dragging tiles on board\n *Track if tile was placed this turn or not\n *Allow dragging of tiles placed this turn\n\n-Implement getting tiles from pouch\n *Show pouch letter count (DONE)\n *Put letter in pouch\n *Draw letter from pouch (DONE)\n\n-Implement player turns (DONE)\n *Two different URLs, one for each player (DONE)\n *End turn button (DONE)\n *Disable UI for non-active player (DONE)\n \n *Fix player names on screen (DONE)\n\n -Implement pushing updates from server to client\n  *Websocket?\n  *When tile placed, turn ended, etc client should update game state from be\n\n-Implement reset game functionality (DONE)\n\n-Performance enhancements: Add useCallbacks etc\n\nMISC\n*Indicate which player's screen is currently visible\nIT2\n\n-Implement player turns\n *Display current players hand (same URL)\n\n -Implement login\n *Add player to session\n*/\n"]},"metadata":{},"sourceType":"module"}