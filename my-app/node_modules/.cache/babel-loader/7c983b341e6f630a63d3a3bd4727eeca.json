{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\components\\\\GameBoardComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BE_URL } from '../state';\nimport { BoardTileComponent } from './BoardTileComponent';\nimport { HandComponent } from './HandComponent';\nimport { PouchComponent } from './PouchComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardComponent = () => {\n  _s();\n\n  const initialGameState = {\n    playerPoints: [],\n    turnOfPlayer: \"\",\n    pouchLetters: [],\n    board: [],\n    playerHands: {}\n  };\n  const [gameState, setGameState] = useState(initialGameState);\n  const [board, setBoard] = useState([]);\n  useEffect(() => {\n    axios.get(BE_URL + \"/game\").then(resp => {\n      //setGameState(resp.data);\n      setBoard(resp.data.board);\n    });\n  }, []);\n\n  const handleLetterTileDrop = async (letterTile, x, y) => {\n    //const newBoard = [...gameState.board];\n    const newBoard = [...board];\n    newBoard[x][y].letter = letterTile.letter;\n    newBoard[x][y].points = letterTile.points;\n    gameState.board = newBoard;\n    const stateFromBe = await sendGameStateToBE(gameState); //setGameState(gameState);\n\n    setBoard(newBoard);\n  };\n\n  const sendGameStateToBE = async state => {\n    const resp = await axios.post(BE_URL + \"/game\", {\n      game: state\n    });\n    return resp.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BoardComponent, {\n      children: board.map((x, y) => x.map((tile, i) => /*#__PURE__*/_jsxDEV(BoardTileComponent, {\n        letterTile: tile.letter ? {\n          letter: tile.letter,\n          points: tile.points\n        } : undefined,\n        tileXPos: y,\n        tileYPos: i,\n        tileDropped: handleLetterTileDrop,\n        tileType: tile.tileType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ButtomContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HandComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PouchComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n/*\r\nfunction createLetterTile(player1) {\r\n\t\t\r\n    var handEl = player1 ? document.getElementById(\"hand1\") : document.getElementById(\"hand2\");\r\n    var handTileCount = handEl.childElementCount-1;\r\n    \r\n    if( handTileCount >= 7 )\r\n        return;\r\n    \r\n    var letter = getNextLetter();\r\n    if( !letter )\r\n        return;\r\n    \r\n    var el = document.createElement(\"div\");\r\n    el.id = \"letterTile_\"+tileIdCounter++;\r\n    el.classList.add(\"letterTile\");\r\n    el.draggable = \"true\";\r\n    \r\n    if( handTileCount > 0 )\r\n        el.style.left = ( handTileCount * 50 )+\"px\";\r\n    \r\n    handEl.appendChild(el);\r\n    \r\n    el.innerHTML = letter;\r\n    \r\n    var pp = points[letter];\r\n    if( !pp )\r\n        pp = ' ';\r\n    \r\n    var pointEl = document.createElement(\"div\");\r\n    pointEl.innerHTML = pp;\r\n    pointEl.classList.add(\"letterPoint\");\r\n    el.appendChild(pointEl);\r\n    \r\n    el.ondragstart = function(e) {\r\n        \r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    \r\n    el.onclick = function() {\r\n        \r\n        if( deleteKeyDown ) {\r\n            \r\n            document.getElementsByTagName(\"body\")[0].removeChild(el);\r\n            addLetterToPool(el.innerHTML);\r\n        }\r\n    }\r\n*/\n\n_s(GameBoardComponent, \"fDK+8Ei4GElx4irzsbcuc/vyVAI=\");\n\n_c = GameBoardComponent;\nconst MainContainer = styled.div`\n\tdispaly: flex;\n`;\nconst ButtomContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n_c2 = ButtomContainer;\nconst BoardComponent = styled.div`\ndisplay: grid;\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\nbackground-color: #2196F3;\npadding: 2px;\nwidth: 718px;\nmargin: auto;\npadding: 10px;\n`;\n_c3 = BoardComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GameBoardComponent\");\n$RefreshReg$(_c2, \"ButtomContainer\");\n$RefreshReg$(_c3, \"BoardComponent\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/GameBoardComponent.tsx"],"names":["axios","useEffect","useState","styled","BE_URL","BoardTileComponent","HandComponent","PouchComponent","GameBoardComponent","initialGameState","playerPoints","turnOfPlayer","pouchLetters","board","playerHands","gameState","setGameState","setBoard","get","then","resp","data","handleLetterTileDrop","letterTile","x","y","newBoard","letter","points","stateFromBe","sendGameStateToBE","state","post","game","map","tile","i","undefined","tileType","MainContainer","div","ButtomContainer","BoardComponent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAEpC,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,YAAY,EAAE,EADO;AAErBC,IAAAA,YAAY,EAAE,EAFO;AAGrBC,IAAAA,YAAY,EAAE,EAHO;AAIrBC,IAAAA,KAAK,EAAE,EAJc;AAKrBC,IAAAA,WAAW,EAAE;AALQ,GAAzB;AAQA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,CAAYO,gBAAZ,CAA5C;AACA,QAAM,CAACI,KAAD,EAASI,QAAT,IAAqBf,QAAQ,CAAgB,EAAhB,CAAnC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAEbD,IAAAA,KAAK,CAACkB,GAAN,CAAUd,MAAM,GAAC,OAAjB,EAA0Be,IAA1B,CAAiCC,IAAD,IAAU;AACtC;AACAH,MAAAA,QAAQ,CAACG,IAAI,CAACC,IAAL,CAAUR,KAAX,CAAR;AACH,KAHD;AAIH,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMS,oBAAoB,GAAG,OAAOC,UAAP,EAAgCC,CAAhC,EAA4CC,CAA5C,KAA2D;AACpF;AACA,UAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAJ,CAAjB;AACAa,IAAAA,QAAQ,CAACF,CAAD,CAAR,CAAYC,CAAZ,EAAeE,MAAf,GAAwBJ,UAAU,CAACI,MAAnC;AACAD,IAAAA,QAAQ,CAACF,CAAD,CAAR,CAAYC,CAAZ,EAAeG,MAAf,GAAwBL,UAAU,CAACK,MAAnC;AACAb,IAAAA,SAAS,CAACF,KAAV,GAAkBa,QAAlB;AACA,UAAMG,WAAW,GAAG,MAAMC,iBAAiB,CAACf,SAAD,CAA3C,CANoF,CAOpF;;AACAE,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACH,GATD;;AAWA,QAAMI,iBAAiB,GAAG,MAAOC,KAAP,IAA6B;AACnD,UAAMX,IAAI,GAAG,MAAMpB,KAAK,CAACgC,IAAN,CAAW5B,MAAM,GAAC,OAAlB,EAA0B;AAAE6B,MAAAA,IAAI,EAAEF;AAAR,KAA1B,CAAnB;AACA,WAAOX,IAAI,CAACC,IAAZ;AACH,GAHD;;AAKA,sBACF;AAAA,4BACO,QAAC,cAAD;AAAA,gBACKR,KAAK,CAACqB,GAAN,CAAW,CAACV,CAAD,EAAGC,CAAH,KACLD,CAAC,CAACU,GAAF,CAAO,CAACC,IAAD,EAAMC,CAAN,kBACP,QAAC,kBAAD;AACA,QAAA,UAAU,EAAGD,IAAI,CAACR,MAAL,GAAc;AAACA,UAAAA,MAAM,EAAEQ,IAAI,CAACR,MAAd;AAAsBC,UAAAA,MAAM,EAAEO,IAAI,CAACP;AAAnC,SAAd,GAA2DS,SADxE;AAEA,QAAA,QAAQ,EAAEZ,CAFV;AAGA,QAAA,QAAQ,EAAEW,CAHV;AAIA,QAAA,WAAW,EAAEd,oBAJb;AAKA,QAAA,QAAQ,EAAEa,IAAI,CAACG;AALf;AAAA;AAAA;AAAA;AAAA,cADA,CADN;AADL;AAAA;AAAA;AAAA;AAAA,YADP,eAaC,QAAC,eAAD;AAAA,8BACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAoBH,CAzDM;AA2DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1Ga9B,kB;;KAAAA,kB;AA4Gb,MAAM+B,aAAa,GAAGpC,MAAM,CAACqC,GAAI;AACjC;AACA,CAFA;AAIA,MAAMC,eAAe,GAAGtC,MAAM,CAACqC,GAAI;AACnC;AACA;AACA,CAHA;MAAMC,e;AAKN,MAAMC,cAAc,GAAGvC,MAAM,CAACqC,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAME,c","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL } from '../state';\r\nimport { BoardTileComponent } from './BoardTileComponent';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\nimport { BoardTile, GameState, LetterTile } from '../../../scrabble-backend/server';\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n    const initialGameState = {\r\n        playerPoints: [],\r\n        turnOfPlayer: \"\",\r\n        pouchLetters: [],\r\n        board: [],\r\n        playerHands: {}\r\n    }\r\n\r\n    const [ gameState, setGameState ] = useState<GameState>(initialGameState);\r\n    const [board , setBoard] = useState<BoardTile[][]>([]);\r\n\r\n    useEffect( () => {\r\n\r\n        axios.get(BE_URL+\"/game\").then( (resp) => {\r\n            //setGameState(resp.data);\r\n            setBoard(resp.data.board);\r\n        });\r\n    },[]);\r\n\r\n    const handleLetterTileDrop = async (letterTile : LetterTile, x : number, y : number) => {\r\n        //const newBoard = [...gameState.board];\r\n        const newBoard = [...board];\r\n        newBoard[x][y].letter = letterTile.letter;\r\n        newBoard[x][y].points = letterTile.points;\r\n        gameState.board = newBoard;\r\n        const stateFromBe = await sendGameStateToBE(gameState);\r\n        //setGameState(gameState);\r\n        setBoard(newBoard);\r\n    };\r\n\r\n    const sendGameStateToBE = async (state : GameState) => {\r\n        const resp = await axios.post(BE_URL+\"/game\",{ game: state });\r\n        return resp.data;\r\n    };\r\n\r\n    return (\r\n\t\t<div>\r\n        \t<BoardComponent>\r\n            \t{board.map( (x,y) => ( \r\n                    x.map( (tile,i) => (\r\n                    <BoardTileComponent \r\n                    letterTile={ tile.letter ? {letter: tile.letter, points: tile.points} : undefined } \r\n                    tileXPos={y} \r\n                    tileYPos={i} \r\n                    tileDropped={handleLetterTileDrop} \r\n                    tileType={tile.tileType}>\r\n                    </BoardTileComponent>))\r\n                ))}\r\n        \t</BoardComponent>\r\n\t\t\t<ButtomContainer>\r\n\t\t\t\t<HandComponent/>\r\n\t\t\t\t<PouchComponent/>\r\n\t\t\t</ButtomContainer>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\n/*\r\nfunction createLetterTile(player1) {\r\n\t\t\r\n    var handEl = player1 ? document.getElementById(\"hand1\") : document.getElementById(\"hand2\");\r\n    var handTileCount = handEl.childElementCount-1;\r\n    \r\n    if( handTileCount >= 7 )\r\n        return;\r\n    \r\n    var letter = getNextLetter();\r\n    if( !letter )\r\n        return;\r\n    \r\n    var el = document.createElement(\"div\");\r\n    el.id = \"letterTile_\"+tileIdCounter++;\r\n    el.classList.add(\"letterTile\");\r\n    el.draggable = \"true\";\r\n    \r\n    if( handTileCount > 0 )\r\n        el.style.left = ( handTileCount * 50 )+\"px\";\r\n    \r\n    handEl.appendChild(el);\r\n    \r\n    el.innerHTML = letter;\r\n    \r\n    var pp = points[letter];\r\n    if( !pp )\r\n        pp = ' ';\r\n    \r\n    var pointEl = document.createElement(\"div\");\r\n    pointEl.innerHTML = pp;\r\n    pointEl.classList.add(\"letterPoint\");\r\n    el.appendChild(pointEl);\r\n    \r\n    el.ondragstart = function(e) {\r\n        \r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    \r\n    el.onclick = function() {\r\n        \r\n        if( deleteKeyDown ) {\r\n            \r\n            document.getElementsByTagName(\"body\")[0].removeChild(el);\r\n            addLetterToPool(el.innerHTML);\r\n        }\r\n    }\r\n*/\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst ButtomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #2196F3;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\npadding: 10px;\r\n`;"]},"metadata":{},"sourceType":"module"}