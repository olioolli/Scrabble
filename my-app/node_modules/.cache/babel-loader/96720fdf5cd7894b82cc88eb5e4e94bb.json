{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Olli/Documents/scrabble-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"C:/Users/Olli/Documents/scrabble-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Olli/Documents/scrabble-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3;import axios from'axios';import{useState}from'react';import styled from'styled-components';import{BE_URL,usePlayers}from'../state';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LoginComponent=function LoginComponent(){var _usePlayers=usePlayers(),players=_usePlayers.players,setPlayers=_usePlayers.setPlayers;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var handleLogin=function handleLogin(){if(isLoading)return;setIsLoading(true);var usernameInput=document.getElementById(\"txtUsername\");var passwordInput=document.getElementById(\"txtPassword\");axios.post(BE_URL+\"/login\",{username:usernameInput.value,password:usernameInput.value}).then(function(response){if(response.status==200){setPlayers([].concat(_toConsumableArray(players),[{name:usernameInput.value}]));window.location.href='/lobby';}else{toast(\"Login failed!\",{position:\"bottom-center\",autoClose:1000,hideProgressBar:false,closeOnClick:true,pauseOnHover:false,draggable:false});;}}).catch(function(err){toast(\"Login failed!\",{position:\"bottom-center\",autoClose:1000,hideProgressBar:false,closeOnClick:true,pauseOnHover:false,draggable:false});;}).finally(function(){setIsLoading(false);});};return/*#__PURE__*/_jsxs(LoginPanel,{children:[/*#__PURE__*/_jsx(TextField,{id:\"txtUsername\"}),/*#__PURE__*/_jsx(TextField,{password:true,id:\"txtPassword\"}),/*#__PURE__*/_jsx(Button,{onClick:handleLogin,children:\"Login\"}),/*#__PURE__*/_jsx(ToastContainer,{})]});};var LoginPanel=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nwidth: 183px;\\n    border-radius: 6px;\\n    padding: 20px;\\n    background: #1e2529;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n\"])));var TextField=styled.input.attrs(function(props){return{type:props.password?\"password\":\"text\"};})(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\nheight: 22px;\\npadding: 5px;\\nborder: 2px solid 2196f3;\\nmargin-top: 5px;\\n\"])));var Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    display: inline-block;\\n    height: 30px;\\n    background: #2196f3;\\n    border-radius: 4px;\\n    border: none;\\n    margin-top: 5px;\\n    width: 181px;\\n\\n    &:hover {\\n      opacity: 0.8;\\n    }\\n\\n    &:active {\\n        border: 1px;\\n        border-style: inset;\\n        user-select: none;\\n    }\\n\"])));","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/LoginComponent.tsx"],"names":["axios","useState","styled","BE_URL","usePlayers","ToastContainer","toast","LoginComponent","players","setPlayers","isLoading","setIsLoading","handleLogin","usernameInput","document","getElementById","passwordInput","post","username","value","password","then","response","status","name","window","location","href","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","err","finally","LoginPanel","div","TextField","input","attrs","props","type","Button","button"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,UAAnC,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,uCAAP,C,wFAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAEhC,gBAAgCH,UAAU,EAA1C,CAAQI,OAAR,aAAQA,OAAR,CAAiBC,UAAjB,aAAiBA,UAAjB,CACA,cAAoCR,QAAQ,CAAC,KAAD,CAA5C,wCAAQS,SAAR,eAAmBC,YAAnB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAEtB,GAAIF,SAAJ,CACI,OAEJC,YAAY,CAAC,IAAD,CAAZ,CACA,GAAME,CAAAA,aAAa,CAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAtB,CACA,GAAMC,CAAAA,aAAa,CAAGF,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAtB,CAEAf,KAAK,CAACiB,IAAN,CAAWd,MAAM,CAAC,QAAlB,CAA2B,CACvBe,QAAQ,CAAEL,aAAa,CAACM,KADD,CAEvBC,QAAQ,CAAEP,aAAa,CAACM,KAFD,CAA3B,EAIEE,IAJF,CAIO,SAACC,QAAD,CAAc,CAEjB,GAAIA,QAAQ,CAACC,MAAT,EAAmB,GAAvB,CAA6B,CACzBd,UAAU,8BAAKD,OAAL,GAAc,CACpBgB,IAAI,CAAEX,aAAa,CAACM,KADA,CAAd,GAAV,CAGAM,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,QAAvB,CACH,CALD,IAMK,CACDrB,KAAK,CAAC,eAAD,CAAkB,CACnBsB,QAAQ,CAAE,eADS,CAEnBC,SAAS,CAAE,IAFQ,CAGnBC,eAAe,CAAE,KAHE,CAInBC,YAAY,CAAE,IAJK,CAKnBC,YAAY,CAAE,KALK,CAMnBC,SAAS,CAAE,KANQ,CAAlB,CAAL,CAOO,CACV,CACJ,CAtBD,EAsBGC,KAtBH,CAsBU,SAACC,GAAD,CAAS,CACf7B,KAAK,CAAC,eAAD,CAAkB,CACnBsB,QAAQ,CAAE,eADS,CAEnBC,SAAS,CAAE,IAFQ,CAGnBC,eAAe,CAAE,KAHE,CAInBC,YAAY,CAAE,IAJK,CAKnBC,YAAY,CAAE,KALK,CAMnBC,SAAS,CAAE,KANQ,CAAlB,CAAL,CAOO,CACV,CA/BD,EAgCCG,OAhCD,CAgCU,UAAM,CACZzB,YAAY,CAAC,KAAD,CAAZ,CACH,CAlCD,EAmCH,CA5CD,CA8CA,mBACI,MAAC,UAAD,yBACI,KAAC,SAAD,EAAW,EAAE,CAAC,aAAd,EADJ,cAEI,KAAC,SAAD,EAAW,QAAQ,KAAnB,CAAoB,EAAE,CAAC,aAAvB,EAFJ,cAGI,KAAC,MAAD,EAAQ,OAAO,CAAGC,WAAlB,mBAHJ,cAII,KAAC,cAAD,IAJJ,GADJ,CAQH,CA3DM,CA6DP,GAAMyB,CAAAA,UAAU,CAAGnC,MAAM,CAACoC,GAAV,wPAAhB,CAWA,GAAMC,CAAAA,SAAS,CAAGrC,MAAM,CAACsC,KAAP,CAAaC,KAAb,CAAmB,SAAAC,KAAK,QAAK,CAC3CC,IAAI,CAAED,KAAK,CAACtB,QAAN,CAAiB,UAAjB,CAA8B,MADO,CAAL,EAAxB,CAAH,gJAAf,CASA,GAAMwB,CAAAA,MAAM,CAAG1C,MAAM,CAAC2C,MAAV,yXAAZ","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL, usePlayers } from '../state';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const LoginComponent = () => {\r\n\r\n    const { players, setPlayers } = usePlayers();\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    const handleLogin = () => {\r\n\r\n        if( isLoading )\r\n            return;\r\n\r\n        setIsLoading(true);\r\n        const usernameInput = document.getElementById(\"txtUsername\") as HTMLInputElement;\r\n        const passwordInput = document.getElementById(\"txtPassword\") as HTMLInputElement;\r\n        \r\n        axios.post(BE_URL+\"/login\",{\r\n            username: usernameInput.value,\r\n            password: usernameInput.value\r\n        }\r\n        ).then((response) => {\r\n\r\n            if( response.status == 200 ) {\r\n                setPlayers([...players, {\r\n                    name: usernameInput.value\r\n                }]);\r\n                window.location.href = '/lobby';\r\n            }\r\n            else {\r\n                toast(\"Login failed!\", {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    });;\r\n            }\r\n        }).catch( (err) => {\r\n            toast(\"Login failed!\", {\r\n                position: \"bottom-center\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                });;\r\n        })\r\n        .finally( () => {\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <LoginPanel>\r\n            <TextField id=\"txtUsername\" />\r\n            <TextField password id=\"txtPassword\" />\r\n            <Button onClick={ handleLogin }>Login</Button>\r\n            <ToastContainer></ToastContainer>\r\n        </LoginPanel>\r\n    );\r\n}\r\n\r\nconst LoginPanel = styled.div`\r\nwidth: 183px;\r\n    border-radius: 6px;\r\n    padding: 20px;\r\n    background: #1e2529;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TextField = styled.input.attrs(props => ({\r\n    type: props.password ? \"password\" : \"text\"\r\n}))`\r\nheight: 22px;\r\npadding: 5px;\r\nborder: 2px solid 2196f3;\r\nmargin-top: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: inline-block;\r\n    height: 30px;\r\n    background: #2196f3;\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin-top: 5px;\r\n    width: 181px;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    &:active {\r\n        border: 1px;\r\n        border-style: inset;\r\n        user-select: none;\r\n    }\r\n`;"]},"metadata":{},"sourceType":"module"}