{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\components\\\\GameBoardComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { BE_WS_URL } from '../state';\nimport { BoardTileComponent } from './BoardTileComponent';\nimport { HandComponent } from './HandComponent';\nimport { PouchComponent } from './PouchComponent';\nimport { getCurrentPlayerName } from '../util/utils';\nimport { useGameState } from '../util/GameStateProvider';\nimport { useCallback } from 'react';\nimport { PlayerInfo } from './PlayerInfoComponent';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GameBoardComponent = () => {\n  _s();\n\n  const {\n    gameState,\n    setGameState,\n    moveLetterFromHandToBoard,\n    moveLetterToHandFromPouch,\n    getPlayers,\n    togglePlayerTurn,\n    moveLetterToPouchFromHand\n  } = useGameState();\n  const client = new W3CWebSocket(BE_WS_URL);\n\n  client.onopen = () => {\n    console.log('WebSocket Client Connected');\n  };\n\n  client.onmessage = message => {\n    const newGameState = JSON.parse(message.data);\n    if (newGameState) setGameState(newGameState);\n  };\n\n  const handleLetterTileDrop = async (letterTile, x, y, isTargetPouch) => {\n    if (isTargetPouch) await moveLetterToPouchFromHand(letterTile);else await moveLetterFromHandToBoard(letterTile, x, y);\n  };\n\n  const handleEndTurnClicked = useCallback(async () => {\n    await togglePlayerTurn();\n  }, [togglePlayerTurn]);\n  const isCurrentPlayerActive = useCallback(() => {\n    return getCurrentPlayerName() === gameState.turnOfPlayer;\n  }, [gameState, getCurrentPlayerName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: getPlayers().map(player => /*#__PURE__*/_jsxDEV(PlayerInfo, {\n        isActive: gameState.turnOfPlayer === player,\n        name: player\n      }, player, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainDiv, {\n      children: [isCurrentPlayerActive() ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(InactivePlayerBlocker, {\n        children: \"Not your turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(BoardComponent, {\n        children: gameState.board.map((x, y) => x.map((tile, i) => /*#__PURE__*/_jsxDEV(BoardTileComponent, {\n          letterTile: tile.letter ? {\n            letter: tile.letter,\n            points: tile.points\n          } : undefined,\n          tileXPos: y,\n          tileYPos: i,\n          tileDropped: handleLetterTileDrop,\n          tileType: tile.tileType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BottomContainer, {\n        children: [/*#__PURE__*/_jsxDEV(HandComponent, {\n          letters: gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PouchComponent, {\n          letters: gameState.pouchLetters !== undefined ? gameState.pouchLetters : [],\n          moveLetterToHandFromPouch: moveLetterToHandFromPouch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndTurnButton, {\n        onClick: handleEndTurnClicked,\n        children: \"End turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoardComponent, \"+Ocr16edfziFWI/VquwP4iTOydo=\", false, function () {\n  return [useGameState];\n});\n\n_c = GameBoardComponent;\nconst HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    flex-direction: row;`;\n_c2 = HeaderContainer;\nconst EndTurnButton = styled.button`\n    width: 100px;\n    padding: 5px;\n    background: #eef1e3;\n    border-radius: 4px;\n`;\n_c3 = EndTurnButton;\nconst MainDiv = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n_c4 = MainDiv;\nconst InactivePlayerBlocker = styled.div`\n  width: 100%;\n  height: 100%;\n  z-index: 10000;\n  background: #762f2f;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  opacity: 0.6;\n`;\n_c5 = InactivePlayerBlocker;\nconst MainContainer = styled.div`\n\tdispaly: flex;\n`;\nconst BottomContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n_c6 = BottomContainer;\nconst BoardComponent = styled.div`\ndisplay: grid;\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\nbackground-color: #2196F3;\npadding: 2px;\nwidth: 718px;\nmargin: auto;\npadding: 10px;\n`;\n_c7 = BoardComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"GameBoardComponent\");\n$RefreshReg$(_c2, \"HeaderContainer\");\n$RefreshReg$(_c3, \"EndTurnButton\");\n$RefreshReg$(_c4, \"MainDiv\");\n$RefreshReg$(_c5, \"InactivePlayerBlocker\");\n$RefreshReg$(_c6, \"BottomContainer\");\n$RefreshReg$(_c7, \"BoardComponent\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/GameBoardComponent.tsx"],"names":["styled","BE_WS_URL","BoardTileComponent","HandComponent","PouchComponent","getCurrentPlayerName","useGameState","useCallback","PlayerInfo","w3cwebsocket","W3CWebSocket","GameBoardComponent","gameState","setGameState","moveLetterFromHandToBoard","moveLetterToHandFromPouch","getPlayers","togglePlayerTurn","moveLetterToPouchFromHand","client","onopen","console","log","onmessage","message","newGameState","JSON","parse","data","handleLetterTileDrop","letterTile","x","y","isTargetPouch","handleEndTurnClicked","isCurrentPlayerActive","turnOfPlayer","map","player","board","tile","i","letter","points","undefined","tileType","playerHands","pouchLetters","HeaderContainer","div","EndTurnButton","button","MainDiv","InactivePlayerBlocker","MainContainer","BottomContainer","BoardComponent"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL, BE_WS_URL } from '../state';\r\nimport { BoardTileComponent } from './BoardTileComponent';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\nimport { BoardTile, GameState, LetterTile } from '../../../scrabble-backend/server';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\nimport { useGameState } from '../util/GameStateProvider';\r\nimport { useCallback } from 'react';\r\nimport { PlayerInfo } from './PlayerInfoComponent';\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n    const { gameState, setGameState, moveLetterFromHandToBoard, moveLetterToHandFromPouch, getPlayers, togglePlayerTurn, moveLetterToPouchFromHand } = useGameState();\r\n\r\n    const client = new W3CWebSocket(BE_WS_URL);\r\n\r\n    client.onopen = () => {\r\n        console.log('WebSocket Client Connected');\r\n    };\r\n    client.onmessage = (message) => {\r\n        \r\n        const newGameState = JSON.parse(message.data as string);\r\n        if (newGameState)\r\n            setGameState(newGameState);\r\n    };\r\n\r\n    const handleLetterTileDrop = async (letterTile: LetterTile, x: number, y: number, isTargetPouch: boolean) => {\r\n        if (isTargetPouch)\r\n            await moveLetterToPouchFromHand(letterTile);\r\n        else\r\n            await moveLetterFromHandToBoard(letterTile, x, y);\r\n    };\r\n\r\n    const handleEndTurnClicked = useCallback(async () => {\r\n        await togglePlayerTurn();\r\n    }, [togglePlayerTurn]);\r\n\r\n    const isCurrentPlayerActive = useCallback(() => {\r\n        return getCurrentPlayerName() === gameState.turnOfPlayer;\r\n    }, [gameState, getCurrentPlayerName]);\r\n\r\n    return (\r\n        <div>\r\n            <HeaderContainer>\r\n                {\r\n                    getPlayers().map(player => (\r\n                        <PlayerInfo isActive={gameState.turnOfPlayer === player} key={player} name={player}></PlayerInfo>\r\n                    ))\r\n                }\r\n            </HeaderContainer>\r\n            <MainDiv>\r\n                {\r\n                    isCurrentPlayerActive() ? <></> : <InactivePlayerBlocker>Not your turn</InactivePlayerBlocker>\r\n                }\r\n                <BoardComponent>\r\n                    {gameState.board.map((x, y) => (\r\n                        x.map((tile, i) => (\r\n                            <BoardTileComponent\r\n                                letterTile={tile.letter ? { letter: tile.letter, points: tile.points } : undefined}\r\n                                tileXPos={y}\r\n                                tileYPos={i}\r\n                                tileDropped={handleLetterTileDrop}\r\n                                tileType={tile.tileType}>\r\n                            </BoardTileComponent>))\r\n                    ))}\r\n                </BoardComponent>\r\n                <BottomContainer>\r\n                    <HandComponent letters={gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []} />\r\n                    <PouchComponent\r\n                        letters={gameState.pouchLetters !== undefined ? gameState.pouchLetters : []}\r\n                        moveLetterToHandFromPouch={moveLetterToHandFromPouch}\r\n                    />\r\n                </BottomContainer>\r\n                <EndTurnButton onClick={handleEndTurnClicked} >End turn</EndTurnButton>\r\n\r\n            </MainDiv>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeaderContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-direction: row;`;\r\n\r\nconst EndTurnButton = styled.button`\r\n    width: 100px;\r\n    padding: 5px;\r\n    background: #eef1e3;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst MainDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`;\r\n\r\nconst InactivePlayerBlocker = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  background: #762f2f;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #2196F3;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\npadding: 10px;\r\n`;"]},"metadata":{},"sourceType":"module"}