{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olli\\\\Documents\\\\scrabble-app\\\\my-app\\\\src\\\\components\\\\GameBoardComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BE_URL } from '../state';\nimport { BoardTileComponent } from './BoardTileComponent';\nimport { HandComponent } from './HandComponent';\nimport { PouchComponent } from './PouchComponent';\nimport { getCurrentPlayerName } from '../util/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardComponent = () => {\n  _s();\n\n  const initialGameState = {\n    playerPoints: [],\n    turnOfPlayer: \"\",\n    pouchLetters: [],\n    board: [],\n    playerHands: {}\n  };\n  const [gameState, setGameState] = useState(initialGameState);\n  const [board, setBoard] = useState([]);\n  useEffect(() => {\n    axios.get(BE_URL + \"/game\").then(resp => {\n      setGameState(resp.data);\n      setBoard(resp.data.board);\n    });\n  }, []);\n\n  const handleLetterTileDrop = async (letterTile, x, y) => {\n    //const newBoard = [...gameState.board];\n    const newBoard = [...board];\n    newBoard[x][y].letter = letterTile.letter;\n    newBoard[x][y].points = letterTile.points;\n    gameState.board = newBoard; // Remove moved tile from hand\n\n    const newHand = copyPlayerHand(letterTile);\n    removeTileFromPlayerHand(newHand, letterTile);\n    updatePlayerHandInGameState(newHand);\n    const stateFromBe = await sendGameStateToBE(gameState); //setGameState(gameState);\n\n    setBoard(newBoard);\n  };\n\n  const updatePlayerHandInGameState = hand => {\n    if (!gameState.playerHands[getCurrentPlayerName()]) return;\n    gameState.playerHands[getCurrentPlayerName()] = hand;\n  };\n\n  const copyPlayerHand = tile => {\n    if (!gameState.playerHands[getCurrentPlayerName()]) return [];\n    return [...gameState.playerHands[getCurrentPlayerName()]];\n  };\n\n  const removeTileFromPlayerHand = (hand, letterTile) => {\n    if (!hand || hand.length === 0) return;\n    const tileIdx = hand.findIndex((tile, idx) => tile.id === letterTile.id);\n    if (tileIdx === -1) return;\n    hand.splice(tileIdx, 1);\n  };\n\n  const sendGameStateToBE = async state => {\n    const resp = await axios.post(BE_URL + \"/game\", {\n      game: state\n    });\n    return resp.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BoardComponent, {\n      children: board.map((x, y) => x.map((tile, i) => /*#__PURE__*/_jsxDEV(BoardTileComponent, {\n        letterTile: tile.letter ? {\n          letter: tile.letter,\n          points: tile.points\n        } : undefined,\n        tileXPos: y,\n        tileYPos: i,\n        tileDropped: handleLetterTileDrop,\n        tileType: tile.tileType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ButtomContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HandComponent, {\n        tiles: gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PouchComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n/*\r\nfunction createLetterTile(player1) {\r\n\t\t\r\n    var handEl = player1 ? document.getElementById(\"hand1\") : document.getElementById(\"hand2\");\r\n    var handTileCount = handEl.childElementCount-1;\r\n    \r\n    if( handTileCount >= 7 )\r\n        return;\r\n    \r\n    var letter = getNextLetter();\r\n    if( !letter )\r\n        return;\r\n    \r\n    var el = document.createElement(\"div\");\r\n    el.id = \"letterTile_\"+tileIdCounter++;\r\n    el.classList.add(\"letterTile\");\r\n    el.draggable = \"true\";\r\n    \r\n    if( handTileCount > 0 )\r\n        el.style.left = ( handTileCount * 50 )+\"px\";\r\n    \r\n    handEl.appendChild(el);\r\n    \r\n    el.innerHTML = letter;\r\n    \r\n    var pp = points[letter];\r\n    if( !pp )\r\n        pp = ' ';\r\n    \r\n    var pointEl = document.createElement(\"div\");\r\n    pointEl.innerHTML = pp;\r\n    pointEl.classList.add(\"letterPoint\");\r\n    el.appendChild(pointEl);\r\n    \r\n    el.ondragstart = function(e) {\r\n        \r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    \r\n    el.onclick = function() {\r\n        \r\n        if( deleteKeyDown ) {\r\n            \r\n            document.getElementsByTagName(\"body\")[0].removeChild(el);\r\n            addLetterToPool(el.innerHTML);\r\n        }\r\n    }\r\n*/\n\n_s(GameBoardComponent, \"fDK+8Ei4GElx4irzsbcuc/vyVAI=\");\n\n_c = GameBoardComponent;\nconst MainContainer = styled.div`\n\tdispaly: flex;\n`;\nconst ButtomContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n_c2 = ButtomContainer;\nconst BoardComponent = styled.div`\ndisplay: grid;\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\nbackground-color: #2196F3;\npadding: 2px;\nwidth: 718px;\nmargin: auto;\npadding: 10px;\n`;\n_c3 = BoardComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GameBoardComponent\");\n$RefreshReg$(_c2, \"ButtomContainer\");\n$RefreshReg$(_c3, \"BoardComponent\");","map":{"version":3,"sources":["C:/Users/Olli/Documents/scrabble-app/my-app/src/components/GameBoardComponent.tsx"],"names":["axios","useEffect","useState","styled","BE_URL","BoardTileComponent","HandComponent","PouchComponent","getCurrentPlayerName","GameBoardComponent","initialGameState","playerPoints","turnOfPlayer","pouchLetters","board","playerHands","gameState","setGameState","setBoard","get","then","resp","data","handleLetterTileDrop","letterTile","x","y","newBoard","letter","points","newHand","copyPlayerHand","removeTileFromPlayerHand","updatePlayerHandInGameState","stateFromBe","sendGameStateToBE","hand","tile","length","tileIdx","findIndex","idx","id","splice","state","post","game","map","i","undefined","tileType","MainContainer","div","ButtomContainer","BoardComponent"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BE_URL } from '../state';\r\nimport { BoardTileComponent } from './BoardTileComponent';\r\nimport { HandComponent } from './HandComponent';\r\nimport { PouchComponent } from './PouchComponent';\r\nimport { BoardTile, GameState, LetterTile } from '../../../scrabble-backend/server';\r\nimport { getCurrentPlayerName } from '../util/utils';\r\n\r\nexport const GameBoardComponent = () => {\r\n\r\n    const initialGameState = {\r\n        playerPoints: [],\r\n        turnOfPlayer: \"\",\r\n        pouchLetters: [],\r\n        board: [],\r\n        playerHands: {}\r\n    }\r\n\r\n    const [ gameState, setGameState ] = useState<GameState>(initialGameState);\r\n    const [board , setBoard] = useState<BoardTile[][]>([]);\r\n\r\n    useEffect( () => {\r\n\r\n        axios.get(BE_URL+\"/game\").then( (resp) => {\r\n            setGameState(resp.data);\r\n            setBoard(resp.data.board);\r\n        });\r\n    },[]);\r\n\r\n    const handleLetterTileDrop = async (letterTile : LetterTile, x : number, y : number) => {\r\n        //const newBoard = [...gameState.board];\r\n        const newBoard = [...board];\r\n        newBoard[x][y].letter = letterTile.letter;\r\n        newBoard[x][y].points = letterTile.points;\r\n        gameState.board = newBoard;\r\n\r\n\r\n        // Remove moved tile from hand\r\n        const newHand = copyPlayerHand(letterTile);\r\n        removeTileFromPlayerHand(newHand, letterTile);\r\n        updatePlayerHandInGameState(newHand);\r\n\r\n        const stateFromBe = await sendGameStateToBE(gameState);\r\n        //setGameState(gameState);\r\n        setBoard(newBoard);\r\n    };\r\n\r\n    const updatePlayerHandInGameState = (hand : LetterTile[]) => {\r\n        if( !gameState.playerHands[getCurrentPlayerName()] ) return;\r\n        gameState.playerHands[getCurrentPlayerName()] = hand;\r\n    }\r\n\r\n    const copyPlayerHand = (tile : LetterTile) => {\r\n        if( !gameState.playerHands[getCurrentPlayerName()] ) return [];\r\n        return [...gameState.playerHands[getCurrentPlayerName()]];\r\n    }\r\n\r\n    const removeTileFromPlayerHand = (hand : LetterTile[], letterTile : LetterTile) => {\r\n        if( !hand || hand.length === 0 ) return;\r\n\r\n        const tileIdx = hand.findIndex( (tile, idx) => tile.id === letterTile.id);\r\n        if( tileIdx === -1 ) return;\r\n        hand.splice(tileIdx,1);\r\n    }\r\n    \r\n    const sendGameStateToBE = async (state : GameState) => {\r\n        const resp = await axios.post(BE_URL+\"/game\",{ game: state });\r\n        return resp.data;\r\n    };\r\n\r\n    return (\r\n\t\t<div>\r\n        \t<BoardComponent>\r\n            \t{board.map( (x,y) => ( \r\n                    x.map( (tile,i) => (\r\n                    <BoardTileComponent \r\n                    letterTile={ tile.letter ? {letter: tile.letter, points: tile.points} : undefined } \r\n                    tileXPos={y} \r\n                    tileYPos={i} \r\n                    tileDropped={handleLetterTileDrop} \r\n                    tileType={tile.tileType}>\r\n                    </BoardTileComponent>))\r\n                ))}\r\n        \t</BoardComponent>\r\n\t\t\t<ButtomContainer>\r\n\t\t\t\t<HandComponent tiles={gameState.playerHands[getCurrentPlayerName()] !== undefined ? gameState.playerHands[getCurrentPlayerName()] :  []}/>\r\n\t\t\t\t<PouchComponent/>\r\n\t\t\t</ButtomContainer>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\n/*\r\nfunction createLetterTile(player1) {\r\n\t\t\r\n    var handEl = player1 ? document.getElementById(\"hand1\") : document.getElementById(\"hand2\");\r\n    var handTileCount = handEl.childElementCount-1;\r\n    \r\n    if( handTileCount >= 7 )\r\n        return;\r\n    \r\n    var letter = getNextLetter();\r\n    if( !letter )\r\n        return;\r\n    \r\n    var el = document.createElement(\"div\");\r\n    el.id = \"letterTile_\"+tileIdCounter++;\r\n    el.classList.add(\"letterTile\");\r\n    el.draggable = \"true\";\r\n    \r\n    if( handTileCount > 0 )\r\n        el.style.left = ( handTileCount * 50 )+\"px\";\r\n    \r\n    handEl.appendChild(el);\r\n    \r\n    el.innerHTML = letter;\r\n    \r\n    var pp = points[letter];\r\n    if( !pp )\r\n        pp = ' ';\r\n    \r\n    var pointEl = document.createElement(\"div\");\r\n    pointEl.innerHTML = pp;\r\n    pointEl.classList.add(\"letterPoint\");\r\n    el.appendChild(pointEl);\r\n    \r\n    el.ondragstart = function(e) {\r\n        \r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n    \r\n    el.onclick = function() {\r\n        \r\n        if( deleteKeyDown ) {\r\n            \r\n            document.getElementsByTagName(\"body\")[0].removeChild(el);\r\n            addLetterToPool(el.innerHTML);\r\n        }\r\n    }\r\n*/\r\n\r\nconst MainContainer = styled.div`\r\n\tdispaly: flex;\r\n`;\r\n\r\nconst ButtomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst BoardComponent = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\nbackground-color: #2196F3;\r\npadding: 2px;\r\nwidth: 718px;\r\nmargin: auto;\r\npadding: 10px;\r\n`;"]},"metadata":{},"sourceType":"module"}